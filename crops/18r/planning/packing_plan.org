# this is ../c/maize/crops/18r/planning/packing_plan.org


* general remarks


** strategy

small field!

bulk and oc to B '16R205:S0001303 x 16R4537:0014611' les-mi1-_mop1

back-cross '16R405:M0002212 x 16R4496:0009201' vs M??

replant family 4552, ancestor, and offspring along with les23s --- possible dominant?
also there is the funny guri les23 story and the slow kinetics

send damon his les-mi1 in the multiple bkrds


surround les15 and lls with elite corn for shading and wind protection


** tables

field 34 last in 14R, 279 stakes

#+tblname: planning
| type             | num rows | modified |
|------------------+----------+----------|
| bulks            |       61 |          |
| Les15            |       10 |          |
| lls1*            |       14 |          |
| selves           |       10 |          |
| dominants        |       22 |          |
| recess           |       17 |          |
| elites           |       41 |          |
| balint-kurti     |        0 |          |
| gardner          |        0 |          |
| total non-inbred |      175 |        0 |
| inbred           |          |          |
| total rows       |          |        0 |
#+TBLFM: @11$2=vsum(@2..@10)::@11$3=vsum(@2..@10)::@13$3=vsum(@11..@12)

| balint-kurti     |     13.5 |          |
| gardner          |      2.5 |          |



#+NAME:inbreds
|                                           |      S |     W |    M |    B | total rows by plntg |
|-------------------------------------------+--------+-------+------+------+---------------------|
| over-planting factors                     |    1.5 |   1.5 |    2 |  1.5 |                     |
|-------------------------------------------+--------+-------+------+------+---------------------|
| 1st plntg lines                           |     81 |    70 |   75 |   52 |                     |
| 2nd plntg lines                           |     10 |    10 |   10 |    0 |                     |
|-------------------------------------------+--------+-------+------+------+---------------------|
| 1st plntg ears                            |    243 |   210 |  225 |  156 |                     |
| 2nd plntg ears                            |     30 |    30 |   30 |    0 |                     |
|-------------------------------------------+--------+-------+------+------+---------------------|
| 1st plntg rows, inc losses                | 18.225 | 15.75 | 22.5 | 11.7 |                     |
| 2nd plntg rows, inc losses                |      3 |     3 |    6 |    0 |                     |
| true 1st plntg rows + some 2nd plntg rows |        |       |      |      |                     |
| rows by inbreds, all plantings            |        |       |      |      |                     |
|-------------------------------------------+--------+-------+------+------+---------------------|
| rounded 1st plntg rows                    |     18 |    16 |   22 |   12 |                  68 |
| rounded 3rd plntg rows                    |      3 |     3 |    6 |    0 |                  12 |
| total rounded rows                        |        |       |      |      |                  80 |
#+TBLFM: @5$2=@3$2*3::@5$3=@3$3*3::@5$4=@3$4*3::@5$5=@3$5*3::@6$2=@4$2*3::@6$3=@4$3*3::@6$4=@4$4*3::@6$5=@4$5*3::@7$2=@5$2*@2$2/20::@7$3=@5$3*@2$3/20::@7$4=@5$4*@2$4/20::@7$5=@5$5*@2$5/20::@11$6=vsum($2..$5)::@12$6=vsum($2..$5)::@13$6=vsum(@11..@12)



Half-rows start at 207.

#+NAME:stakes
|-------------------------------------------------+-------|
| full rows elite, interspersed                   |    41 |
| full rows inbreds                               |    80 |
| full rows mutants                               |    84 |
| half rows mutants                               |    97 |
| total stakes                                    |   302 |
| total physical rows needed, exclusive of border | 253.5 |
#+TBLFM: @6$2=vsum(@1..@3) + @4/2




#+BEGIN_SRC example of counting by planting using grep and wc
bash-3.2$ grep '\],1,\[' packing_plan.org | wc
     132    1187   16898
bash-3.2$ grep '\],2,\[' packing_plan.org | wc
     103     561   11729
bash-3.2$ grep '\],3,\[' packing_plan.org | wc
       6       6     462
#+END_SRC



* DONE %%%%%%%%%%%%%%%%%%%%% inbreds, 68 rows %%%%%%%%%%%%%%%%%%%

** DONE first planting

#+begin_src prolog :tangle yes
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],1,[inbred],'','',20,20).


packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],1,[inbred],'','',20,20).


packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],1,[inbred],'','',20,20).


packing_plan(,1,['13R504:B0xxxxxx','13R504:B0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['13R504:B0xxxxxx','13R504:B0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['13R504:B0xxxxxx','13R504:B0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['13R504:B0xxxxxx','13R504:B0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['13R504:B0xxxxxx','13R504:B0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['13R504:B0xxxxxx','13R504:B0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['13R504:B0xxxxxx','13R504:B0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['13R504:B0xxxxxx','13R504:B0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['13R504:B0xxxxxx','13R504:B0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['13R504:B0xxxxxx','13R504:B0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['13R504:B0xxxxxx','13R504:B0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['13R504:B0xxxxxx','13R504:B0xxxxxx'],1,[inbred],'','',20,20).

#+end_src


** DONE third planting


#+begin_src prolog :tangle yes

packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],3,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],3,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx','09R201:S0xxxxxx'],3,[inbred],'','',20,20).


packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],3,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],3,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx','09R301:W0xxxxxx'],3,[inbred],'','',20,20).


packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],3,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],3,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],3,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],3,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],3,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],3,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx','09R401:M0xxxxxx'],3,[inbred],'','',20,20).




#+end_src



* DONE %%%%%%%%%%%%%%%%%%%%% mutants, 191 rows %%%%%%%%%%%%%%%%%%%




** DONE %%%%%%%%%%%%%%%%%%%% bulks, 61 rows %%%%%%%%%%%%%

#+begin_src prolog  :tangle yes

% W23/Les1-, K1903.  Defer K1909 and K1912 indefinitely
packing_plan(,1,['14R205:S0000212','14R4144:0019801'],1,[inc,self,'B'],'is 6th!','K1903',20,20).



% Mo20W/Les2-
packing_plan(,1,['13R405:M0002504','13R4079:0004909'],1,[inc,self,'B','W'],'is 6th!','K0207',20,20).

% W23/Les2-
packing_plan(,1,['13R405:M0002602','13R4081:0005403'],1,[self,inc,'B'],'is 6th!','K2002',20,20).


% Les2-N845A/Les2-N845A-
packing_plan(,1,['13R205:S0000507','13R4145:0018815'],1,[inc,self,'B'],'is 6th!','K5515',20,20).
packing_plan(,1,['14R305:W0000905','14R4273:0020102'],1,[inc,self,'B'],'is 6th!','K5515',20,20).
packing_plan(,1,['17R405:M0002113','17R4564:0016707'],1,[inc,self,'B'],'is 6th!','K5515',20,20).


% Mo20W/Les4-
packing_plan(,1,['14R205:S0000215','14R4229:0009701'],1,[inc,self,'B'],'is 6th!','K0303',20,20).


% W23/Les4-
packing_plan(,1,['15R405:M0001101','15R4353:0011002'],1,[inc,self,'B'],'is 6th!','K2106',20,20).


% Mo20W/Les6-
packing_plan(,1,['11N205:S0037004','11N3433:0012810'],1,[inc,self,'B'],'is 6th!','K0403',20,20).
packing_plan(,1,['12N3962:0020204','12N3962:0020211'],1,[inc,self,'B'],'is 6th!','K0403',20,20).


% W23/Les6-
packing_plan(,1,['15R405:M0001302','15R4354:0011306'],1,[inc,self,'B'],'is 6th! pick one of three','K2202',20,20).
packing_plan(,1,['15R405:M0001205','15R4355:0011403'],1,[inc,self,'B'],'is 6th! pick one of three','K2202',20,20).
packing_plan(,1,['15R405:M0001313','15R4277:0011507'],1,[inc,self,'B'],'is 6th! pick one of three','K2202',20,20).

% Mo20W/Les7-
packing_plan(,1,['16R305:W0001610','16R4279:0010511'],1,[inc,self,'B'],'is 6th! alternate for 16R305:W0002914; repeat 17r','K0509',20,20).
packing_plan(,1,['16R305:W0002914','16R4279:0010511'],1,[inc,self,'B'],'is 6th! alternate for 16R305:W0001610','K0509',20,20).


% W23/Les7-
packing_plan(,1,['16R205:S0001202','16R4390:0010609'],1,[inc,self,'B'],'is 6th! alternate for 16R205:S0001301','K2312',20,20).
packing_plan(,1,['16R205:S0001301','16R4390:0010611'],1,[inc,self,'B'],'is 6th! alternate for 16R205:S0001202','K2312',20,20).


packing_plan(,1,['15R305:W0000601','15R4359:0012512'],1,[inc,self,'B'],'is 6th! alternate for 15R305:W0000707','K2312',20,20).
packing_plan(,1,['15R305:W0000707','15R4360:0012608'],1,[inc,self,'B'],'is 6th! alternate for 15R305:W0000601','K2312',20,20).

packing_plan(,1,['14R405:M0001211','14R4282:0021308'],1,[inc,self,'B'],'is 6th! alternate for 14R405:M0001212','K2312',20,20).
packing_plan(,1,['14R405:M0001212','14R4282:0021303'],1,[inc,self,'B'],'is 6th! alternate for 14R405:M0001211','K2312',20,20).


% W23/Les8-
packing_plan(,1,['14R205:S0000107','14R4284:0021509'],1,[inc,self,'B'],'is 6th!','K2405',20,20).


% W23/Les9-
packing_plan(,1,['12R305:W0002901','12R3620:0027307'],1,[inc,self],'is 6th!','K2506',20,20).
packing_plan(,1,['17R405:M0002306','17R4578:0017406'],1,[inc,self,'B'],'is 6th!','K2506',20,20).


% Mo20W/Les10-

packing_plan(,1,['14R205:S0000508','14R4287:0022003'],1,[inc,self,'B'],'is 6th! retry 15r; alternate for 14R205:S0000307','K0801',20,20).
packing_plan(,1,['14R205:S0000307','14R4160:0022114'],1,[inc,self,'B'],'is 6th! retry 15r; alternate for 14R205:S0000508','K0801',20,20).
packing_plan(,1,['13R305:W0000706','13R3623:0024902'],1,[inc,self],'is 6th!','K0801',20,20).


% W23/Les10-
packing_plan(,1,['17R205:S0001307','17R4539:0017501'],1,[inc,self,'B'],'is 6th; no ear','K2606',20,20).


% Mo20W/Les11-
packing_plan(,1,['14R205:S0000415','14R4291:0022711'],1,[inc,self,'B'],'is 6th!','K0901',20,20).
packing_plan(,1,['12R305:W0002602','12R3627:0028208'],1,[inc,self,'B'],'is 6th!','K0901',20,20).
packing_plan(,1,['16R405:M0003206','16R4511:0011304'],1,[inc],'is 6th!','K0901',20,20).


% Mo20W/Les12-
packing_plan(,1,['17R205:S0001112','17R4543:0017914'],1,[inc,self,'B'],'is 6th! small ear; alternate for 17R205:S0001117','K1001',20,20).
packing_plan(,1,['17R205:S0001117','17R4543:0017901'],1,[inc,self,'B'],'is 6th! small ear; alternate for 17R205:S0001112','K1001',20,20).


% Mo20W/Les13-
packing_plan(,1,['12N205:S0041303','12N4017:0028305'],1,[inc,self,'B'],'is 6th! low cl','K1109',20,20).


% W23/Les13-
packing_plan(,1,['13R205:S0003402','13R4167:0026602'],1,[inc,self,'B','W'],'is 6th!','K2805',20,20).


% W23/Les15-N2007-
packing_plan(,1,['17R305:W0004012','17R4548:0011508'],1,[inc,self,'B'],'is 6th! amazing! alternate for 17R305:W0004016','K6711',25,20).
packing_plan(,1,['17R305:W0004016','17R4548:0011508'],1,[inc,self,'B'],'is 6th! amazing! alternate for 17R305:W0004012','K6711',25,20).


% Mo20W/Les17-
packing_plan(,1,['14R405:M0001808','14R4296:0024014'],1,[inc,self,'B'],'is 6th! S lines have no ear, but W lines do','K1309',20,20).


% W23/Les17-
packing_plan(,1,['16R405:M0003312','16R4027:0012203'],1,[inc,self,'B'],'is 6th!; poor germination; may not have ears; repeat of 17r','K3007',25,20).
packing_plan(,1,['16R405:M0000808','16R4298:0012403'],1,[inc,self],'is 6th!; poor germination; may not have ears; repeat of 17r','K3007',25,20).



% Mo20W/Les18-
packing_plan(,1,['12N205:S0038205','12N4028:0030308'],1,['B'],'is 6th! just B if room','K1411',20,20).


% Mo20W/Les18-
packing_plan(,1,['14R305:W0001006','14R4299:0024502'],1,[inc,self,'B'],'is 6th! may have small ear','K1411',20,20).
packing_plan(,1,['16R405:M0002208','16R4300:0012606'],1,[inc],'is 6th! may have small ear','K1411',20,20).



% W23/Les18-
packing_plan(,1,['14R205:S0000204','14R4301:0024705'],1,[inc,self,'B'],'is 6th!','K3106',20,20).
packing_plan(,1,['11N305:W0031405','11N3464:0019405'],1,[inc],'is 6th! got the rest','K3106',20,20).
packing_plan(,1,['14R405:M0001209','14R4302:0024808'],1,[inc,self,'B'],'is 6th! male had bad tassel in 14r','K3106',20,20).


% Mo20W/Les19-
packing_plan(,1,['12N405:M0039608','12N4037:0031503'],1,[inc,self,'B'],'is 6th! W line has infertile ears','K1506',20,20).
packing_plan(,1,['14R205:S0000405','14R4303:0024904'],1,[inc,self,'B'],'is 6th! W line has infertile ears','K1506',20,20).


% W23/Les19-
packing_plan(,1,['13R205:S0003403','13R4176:0028502'],1,[inc,self],'is 6th! if room, self most important','K3206',20,20).
packing_plan(,1,['12R305:W0010711','12R3653:0031303'],1,[inc,self],'is 6th! if room, self most important','K3206',20,20).
packing_plan(,1,['17R405:M0004413','17R4518:0018408'],1,[inc,self,'B'],'is 6th! small ear','K3206',20,20).



% W23/Les20-N2457-
packing_plan(,1,['17R405:M0004416','17R4570:0019003'],1,[inc,self,'B'],'is 6th','K7110',20,20).


% W23/Les21-
packing_plan(,1,['14R205:S0000208','14R4308:0026010'],1,[inc,self,'B'],'is 6th! may be short','K3311',20,20).


% B73 Ht1/Les21-N1442-
packing_plan(,1,['13R405:M0003608','13R4184:0030002'],1,[inc,self],'is 6th! got plenty of B','K7205',20,20).


% Mo20W/les23
packing_plan(,1,['17R4618:0012502','17R4618:0012502'],1,[inc,self,'B'],'is 6th!','K1802',20,20).







% mop1/Les*-mi1-
packing_plan(,1,['16R205:S0001303','16R4537:0014611'],1,[inc],'is 6th! just the bulking','K12205',20,20).
packing_plan(,1,['14R305:W0001007','14R4186:0026908'],1,[inc,self,'B'],'is 6th!','K12205',20,20).
packing_plan(,1,['14R405:M0001509','14R4313:0027007'],1,[inc,self,'B'],'is 6th!','K12205',20,20).


% CM105/Les*-N1378-
packing_plan(,1,['14R205:S0000101','14R4314:0027101'],1,[inc,self,'B'],'is 6th!','K7403',20,20).
packing_plan(,1,['14R405:M0001512','14R4315:0027205'],1,[inc,self,'B'],'is 6th!','K7403',20,20).





% B73/AG32/Les*-N2418-
packing_plan(,1,['15R405:M0001414','15R4365:0019903'],1,[inc,self,'B'],'is 6th!','K8501',20,20).





#+end_src



** DONE %%%%%%%%%%%%%%%%%%%% Les15, 10 rows exclusive of shade %%%%%%%%%%%%%%%%%%%%

#+begin_src prolog  :tangle yes

% sandwich between rows of elites, 30/20 ft
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).


% W23/Les15-N2007-
packing_plan(,1,['17R205:S0003715','17R4548:0011508'],1,['S'],'is 1st; from 6th bc in W','K6711',25,20).


packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['17R205:S0001502','17R2252:0011020'],1,['S'],'is 2nd','K6711',25,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['17R205:S0003302','17R4419:0011134'],1,['S'],'is 2nd','K6711',25,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['17R205:S0003317','17R4419:0011132'],1,['S'],'is 2nd','K6711',25,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['17R205:S0003505','17R4419:0011108'],1,['S'],'is 2nd','K6711',25,20).

packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['12R205:S0008815','12R3270:0014314'],1,['S'],'is 3rd; mutants died in 17r','K6711',25,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['12R205:S0009109','12R3270:0014314'],1,['S'],'is 3rd; mutants died in 17r','K6711',25,20).

packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['17R405:M0004208','17R4548:0011508'],1,['M'],'is 1st; from 6th bc in W','K6711',25,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['17R405:M0004414','17R4550:0012019'],1,['M'],'is 3rd','K6711',25,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['17R405:M0004706','17R4552:0012208'],1,['M'],'is 3rd','K6711',25,20).


#+end_src







** DONE %%%%%%%%%%%%%%%%%%%% llses, 14 rows exclusive of shade %%%%%%%%%%%%%%%%%%%%%

#+begin_src prolog  :tangle yes

% Mo20W/lls1-
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['13R4057:0013913','13R4057:0013913'],1,[check,'S'],'is 3rd; alternate for 16R4460:0003604','K1702',25,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['16R4460:0003604','16R4460:0003604'],1,[check,'S'],'is 3rd; alternate for 13R4057:0013913','K1702',25,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['15R4335:0006104','15R4335:0006104'],1,[check,'W'],'is 3rd','K1702',25,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['15R4336:0006204','15R4336:0006204'],1,[check,'M'],'is 3rd','K1702',25,20).


% +/lls1-K10600
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['13R4059:0014102','13R4059:0014102'],2,[check,'M'],'is 2nd','K10602',25,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['12N3890:0004911','12N3890:0004911'],2,[check,'S'],'is 2nd; alternate for 12N3891:0005011','K10602',25,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['12N3891:0005011','12N3891:0005011'],2,[check,'S'],'is 2nd; alternate for 12N3890:0004911','K10602',25,20).




% W23/lls1 121D-K3400
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['14R4197:0015402','14R4197:0015402'],2,[check,'S'],'is 2nd; alternate for 14R4198:0015503','K3402',25,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['14R4198:0015503','14R4198:0015503'],2,[check,'S'],'is 2nd; alternate for 14R4197:0015402','K3402',25,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['16R4461:0003709','16R4461:0003709'],2,[check,'W'],'is 3rd','K3402',25,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['16R4462:0003803','16R4462:0003803'],2,[check,'M'],'is 2nd','K3402',25,20).




% lls1 121D/lls1 121D-K5300
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['16R4463:0003902','16R4463:0003902'],2,[check,'W'],'is 3rd','K5302',25,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['16R4464:0004002','16R4464:0004002'],2,[check,'M'],'is 3rd','K5302',25,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,['15R4337:0006301','15R4337:0006301'],2,[check,'S'],'is 2nd','K5302',25,20).

packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).
packing_plan(,1,[elite],1,[shade],'','',30,20).




#+end_src





** DONE %%%%%%%%%%%%%%%%%%%% selves, 10 rows %%%%%%%%%%%%%

#+begin_src prolog  :tangle yes

% Mo20W/les23 fast and slow kinetics
packing_plan(,1,['17R205:S0001102','17R4626:0015704'],1,[self],'offspring of 16R4465:0004111; fast kinetics','K1802',15,10).
packing_plan(,1,['17R205:S0001212','17R4625:0015804'],1,[self],'offspring of 16R4466:0004206; fast kinetics','K1802',15,10).
packing_plan(,1,['17R205:S0003704','17R4625:0015808'],1,[self],'offspring of 16R4466:0004206; slow kinetics','K1802',15,10).
packing_plan(,1,['17R205:S0001210','17R4625:0015809'],1,[self],'offspring of 16R4466:0004206; fast kinetics','K1802',15,10).


% Mo20W/les23-
packing_plan(,1,['14R205:S0002812','14R4236:0017206'],1,[self],'repeat 17r row 160; low cl','K1804',15,10).
packing_plan(,1,['17R405:M0002216','17R4474:0016104'],1,[self],'offspring 17r row 161','K3514',15,10).
packing_plan(,1,['17R205:S0001317','17R0703:0016203'],1,[self],'offspring 17r row 162','K16306',15,10).
packing_plan(,1,['17R305:W0003903','17R0703:0016203'],1,[self],'offspring 17r row 162','K16306',15,10).
packing_plan(,1,['17R205:S0001217','17R0703:0016204'],1,[self],'offspring 17r row 162','K16306',15,10).
packing_plan(,1,['17R305:W0003910','17R0703:0016204'],1,[self],'offspring 17r row 162','K16306',15,10).
packing_plan(,1,['17R305:W0003807','17R0703:0016208'],1,[self],'offspring 17r row 162','K16306',15,10).
packing_plan(,1,['17R205:S0001102','17R4626:0015704'],1,[self],'is 4th','K1802',15,10).


% ?/les23-K16300
packing_plan(,1,['17R305:W0001813','17R4552:0013415'],1,[self],'is 3rd; fork of 14R405:M0001302','K16306',15,10).
packing_plan(,1,['17R305:W0001708','17R4553:0013510'],1,[self],'is 3rd; fork of 14R405:M0001302','K16306',15,10).
packing_plan(,1,['17R405:M0002201','17R4554:0013613'],1,[self],'is 5th','K16306',15,10).
packing_plan(,1,['17R405:M0002509','17R4555:0013708'],1,[self],'is 5th','K16306',15,10).


% +/lls1-K10600
packing_plan(,1,['15R305:W0003016','15R4217:0005818'],1,[self],'is 4th','K10602',15,10).


% W23/lls1 121D-K3400
packing_plan(,1,['15R405:M0003510','15R4334:0005405'],1,[self],'is 2nd','K3402',15,10).



% Balint-Kurti NC350/les*-R8-2-K67400
packing_plan(,1,['15R205:S0002412','15R0674:0021810'],1,[self],'is 1st; low cl','K67410',15,10).

% Balint-Kurti NC262/les*-R168-1-K67800
packing_plan(,1,['15R205:S0002402','15R0678:0022212'],1,[self],'is 1st','K67812',15,10).


#+end_src


** DONE %%%%%%%%%%%%%%%%%%%% dominants to bc, 22 rows %%%%%%%%%%%

*** primary dominants


#+begin_src prolog  :tangle yes



% Mo20W/Les1-, K0104
packing_plan(,1,['12N3899:0005901','12N3899:0005901'],1,[check,'S'],'is 3rd; no phe?; possible pedigree issue','K0104',15,10).
packing_plan(,1,['12N205:S0036411','12N3899:0005903'],1,[check,'S'],'is 4th; no phe?; possible pedigree issue','K0104',15,10).

packing_plan(,1,['12R305:W0001416','12R3551:0017902'],1,[check,'W'],'is 3rd; no phe?; possible pedigree issue','K0104',15,10).

packing_plan(,1,['12R405:M0011112','12R3552:0018003'],1,[check,'M'],'is 3rd; no phe?; possible pedigree issue','K0104',15,10).





% Mo20W/Les2-

packing_plan(,1,['11N205:S0039107','11N3399:0007703'],1,['S'],'is 2nd','K0202',15,10).
packing_plan(,1,['14R305:W0001009','14R4220:0006811'],1,['W'],'is 4th','K0202',15,10).
packing_plan(,1,['11N405:M0038409','11N3401:0007903'],1,['M'],'is 2nd','K0202',15,10).


packing_plan(,1,['06N301:W0004207','06N1012:0000201'],2,['W'],'is 1st; forebear; no phe?','K0207',15,10).
packing_plan(,1,['11R305:W0051918','11R3284:0054005'],1,['W'],'is 3rd; no phe?','K0207',15,10).
packing_plan(,1,['11N305:W0038303','11N3405:0008710'],1,['W'],'is 4th; no phe?','K0207',15,10).

packing_plan(,1,['17R305:W0002003','17R4557:0016502'],1,['W'],'is 4th; phe 17r','K0207',15,10).
packing_plan(,1,['17R305:W0003906','17R4558:0016602'],1,['W'],'is 4th; phe 17r','K0207',15,10).





% Mo20W/Les6-
packing_plan(,1,['13R405:M0003605','13R4151:0019601'],1,['M'],'is 5th; alternate for 12N405:M0042504','K0403',15,10).
% packing_plan(,1,['12N405:M0042504','12N3255:0020508'],1,['M'],'is 5th; alternate for 13R405:M0003605; low cl','K0403',15,10).

packing_plan(,1,['10R405:M0006608','10R2236:0020906'],1,['M'],'is ?th; alternate for 13R405:M0003605; low cl','K0403',15,10).






% Mo20W/Les8-
packing_plan(,1,['06N201:S0006806','06N1240:0001009'],2,['S'],'is 1st','K0601',15,10).
packing_plan(,1,['06N301:W0005107','06N1240:0001002'],2,['W'],'is 1st','K0601',15,10).
packing_plan(,1,['06N401:M0007603','06N1240:0001007'],2,['M'],'is 1st','K0601',15,10).

packing_plan(,1,['06N201:S0006804','06N1241:0000905'],2,['S'],'is 1st','K0609',15,10).
packing_plan(,1,['06N301:W0006009','06N1241:0000909'],2,['W'],'is 1st','K0609',15,10).
packing_plan(,1,['06N401:M0007003','06N1241:0000903'],2,['M'],'is 1st','K0609',15,10).


packing_plan(,1,['06N201:S0005606','06N1612:0020507'],2,['S'],'is 1st','K0611',15,10).
packing_plan(,1,['06R300:W00I1717','06R0006:0000611'],2,['W'],'is 1st; low cl','K0611',15,10).
packing_plan(,1,['06R400:M00I1806','06R0006:0000611'],2,['M'],'is 1st','K0611',15,10).

packing_plan(,1,['06N201:S0005004','06N1611:0020404'],2,['S'],'is 1st','K0612',15,10).
packing_plan(,1,['06N301:W0035901','06N1611:0020404'],2,['W'],'is 1st','K0612',15,10).
packing_plan(,1,['07R401:M0026102','07R2495:0053408'],1,['M'],'is 3rd','K0612',15,10).


% W23/Les9-
packing_plan(,1,['15R205:S0000401','15R4391:0012707'],1,['S'],'is 5th','K2506',15,10).



% Mo20W/Les10-
packing_plan(,1,['12R405:M0008212','12R3624:0027701'],1,['M'],'is 2nd','K0801',15,10).




% W23/Les10-
packing_plan(,1,['17R405:M0002203','17R4540:0017604'],1,['M'],'is 4th; bad tassel; alternate for 17R405:M0002111','K2606',15,10).
packing_plan(,1,['17R405:M0002111','17R4509:0017712'],1,['M'],'is 4th; bad tassel; alternate for 17R405:M0002203','K2606',15,10).




% W23/Les12-
packing_plan(,1,['17R205:S0001204','17R4545:0018105'],1,['S'],'is 5th; poor ears','K2711',15,10).



% Mo20W/Les13-
packing_plan(,1,['17R305:W0001902','17R4546:0018201'],1,['W'],'is 5th','K1109',15,10).
packing_plan(,1,['14R405:M0001412','14R4166:0023701'],1,['M'],'is 5th','K1109',15,10).
packing_plan(,1,['17R405:M0002206','17R4546:0018201'],2,['M'],'is 1st','K1109',15,10).



% W23/Les13-
packing_plan(,1,['11N305:W0040104','11N3201:0017703'],2,['W'],'is 1st; reach-back','K2805',15,10).
packing_plan(,1,['16R405:M0001804','16R4516:0012008'],1,['M','W'],'is 5th; line tends to be infertile','K2805',15,10).











% W23/Les20-N2457-
packing_plan(,1,['15R305:W0003206','15R4044:0016008'],1,['W'],'is 2nd via S','K7110',15,10).
packing_plan(,1,['15R205:S0002306','15R4403:0015507'],1,['S'],'is 4th; no ear','K7110',15,10).
packing_plan(,1,['15R305:W0002904','15R3654:0016401'],1,['W'],'is 5th; alternate for 17R305:W0003817 and 17R305:W0005401','K7110',15,10).
packing_plan(,1,['17R305:W0003817','17R4569:0018711'],1,['W'],'is 5th; alternate for 15R305:W0002904','K7110',15,10).
packing_plan(,1,['17R305:W0005401','17R4569:0018709'],1,['W'],'is 5th; alternate for 15R305:W0002904','K7110',15,10).




% W23/Les21-
packing_plan(,1,['14R405:M0001610','14R4048:0026106'],1,['M'],'is 4th; runs short','K3311',15,10).




#+end_src






** DONE %%%%%%%%%%%%%%%%%%%% recessives to bc, 17 rows %%%%%%%%%%



*** primary recessives


#+begin_src prolog  :tangle yes


% +/Les3-GJ-K11900
packing_plan(,1,['17R4627:0013801','17R4627:0013801'],1,[check,'S'],'is 3rd; male parent had no ear','K11906',15,10).
packing_plan(,1,['17R4627:0013802','17R4627:0013802'],1,[check,'S'],'is 3rd; male parent had no ear','K11906',15,10).

packing_plan(,1,['17R4572:0013901','17R4572:0013901'],1,[check,'W'],'is 3rd; male parent had ear','K11906',15,10).
packing_plan(,1,['17R4572:0013904','17R4572:0013904'],1,[check,'W'],'is 3rd; male parent had ear','K11906',15,10).

packing_plan(,1,['17R4628:0014002','17R4628:0014002'],1,[check,'M'],'is 3rd; male parent had ear','K11906',15,10).
packing_plan(,1,['17R4628:0014005','17R4628:0014005'],1,[check,'M'],'is 3rd; male parent had ear','K11906',15,10).




% ?/Les5-K11600
packing_plan(,1,['13R4131:0016409','13R4131:0016409'],2,[check,'S','W','M'],'is 0th; plant had phe in 13r','K11601',15,10).
packing_plan(,1,['13R4131:0016412','13R4131:0016412'],2,[check,'S','W','M'],'is 0th; plant had no phe in 13r','K11601',15,10).
packing_plan(,1,['13R4132:0016503','13R4132:0016503'],2,[check,'S','W','M'],'is 0th; plant had no phe in 13r','K11601',15,10).
packing_plan(,1,['13R4133:0016601','13R4133:0016601'],2,[check,'S','W','M'],'is 0th; plant had no phe in 13r','K11601',15,10).
packing_plan(,1,['13R4134:0016701','13R4134:0016701'],2,[check,'S','W','M'],'is 0th; plant had no phe in 13r','K11601',15,10).
packing_plan(,1,['13R4135:0016804','13R4135:0016804'],2,[check,'S','W','M'],'is 0th; plant had phe in 13r','K11601',15,10).
packing_plan(,1,['13R4135:0016805','13R4135:0016805'],2,[check,'S','W','M'],'is 0th; plant had phe in 13r','K11601',15,10).
packing_plan(,1,['13R4135:0016807','13R4135:0016807'],2,[check,'S','W','M'],'is 0th; plant had no phe in 13r','K11601',15,10).
packing_plan(,1,['13R4135:0016809','13R4135:0016809'],2,[check,'S','W','M'],'is 0th; plant had phe in 13r','K11601',15,10).
packing_plan(,1,['13R4136:0016901','13R4136:0016901'],2,[check,'S','W','M'],'is 0th; plant had no phe in 13r','K11601',15,10).
packing_plan(,1,['13R4136:0016907','13R4136:0016907'],2,[check,'S','W','M'],'is 0th; plant had phe in 13r','K11601',15,10).



% Mo20W/les23-

% possible dominant, contaminant, or funky pedigree, K70309
% 134 -- 137, all have dominants, 5303, 5305, 5311 all have phe

packing_plan(,1,['15R305:W0000908','15R4373:0007409'],2,[check,'S','W','M'],'forebear les23-tk1; repeat 17r row 162; dominant mutant in row? contaminant?; phe 17.7 16r; repeat of 16r','K70309',15,10).
packing_plan(,1,['17R305:W0001813','17R4552:0013415'],2,[check,'W','S'],'les23-tk1','K70309',15,10).
packing_plan(,1,['17R305:W0001708','17R4553:0013510'],2,[check,'W','S'],'les23-tk1','K70309',15,10).
packing_plan(,1,['17R405:M0002201','17R4554:0013613'],2,[check,'M','S'],'les23-tk1','K70309',15,10).
packing_plan(,1,['17R405:M0002509','17R4555:0013708'],2,[check,'M','S'],'les23-tk1','K70309',15,10).




% 157-162 bcs

% 157, 158 K1802, mo20 has phe; 158 bit more extreme
% 158 late phe
% 15708 late
% 15704 fast
% 15804, 15809 fast K16306
% 15806, 15808 slow: disease? taller, more robust that 04 and 09


packing_plan(,1,['16R4465:0004111','16R4465:0004111'],1,[check,'S','W','M'],'repeat of 17r row 157; fast and slow kinetics; go for slow','K00000',15,10).
packing_plan(,1,['16R4466:0004206','16R4466:0004206'],1,[check,'S','W','M'],'repeat of 17r row 158; fast and slow kinetics; go for slow','K00000',15,10).



% 159, 160 K1804, no phe, confirm 16r results, go back to other steps
% 161 has phe, K3514
% 162 bc in w23, good phe K16306

packing_plan(,1,['15R4370:0006703','15R4370:0006703'],1,[check,'S'],'repeat 17r row 159','K1804',15,10).

packing_plan(,1,['15R4372:0007201','15R4372:0007201'],1,[check,'M'],'repeat 17r row 161','K3514',15,10).
packing_plan(,1,['17R4619:0012702','17R4619:0012702'],1,[check,'W'],'is 5th','K1804',15,10).
packing_plan(,1,['17R4623:0012802','17R4623:0012802'],1,[check,'M'],'is 4th','K1804',15,10).
packing_plan(,1,['17R4622:0012610','17R4622:0012610'],1,[check,'M'],'is 5th','K1802',15,10).




% W23/les23-
packing_plan(,1,['17R4616:0012904','17R4616:0012904'],1,[check,'S'],'is 4th','K3514',15,10).
packing_plan(,1,['17R4620:0013009','17R4620:0013009'],1,[check,'W'],'is 5th','K3514',15,10).
packing_plan(,1,['17R4624:0013104','17R4624:0013104'],1,[check,'M'],'is 4th','K3514',15,10).









% ?/les23-K16300
packing_plan(,1,['17R4617:0013208','17R4617:0013208'],1,[check,'W'],'is 4th','K16306',15,10).
packing_plan(,1,['17R4621:0013302','17R4621:0013302'],1,[check,'M'],'is 4th','K16306',15,10).





#+end_src






* DONE %%%%%%%%%%%%%%%%%%%%% damon's and fun corn %%%%%%%%%%%%%%%%%%%%%%%%




#+begin_src prolog  :tangle yes

% country gentleman and popcorn

% for Damon Lisch

packing_plan(,1,['16R205:S0001303','16R4537:0014611'],1,[send],'is 6th! for Damon','K12205',50,10).
packing_plan(,1,['14R305:W0001007','14R4186:0026908'],1,[send],'is 6th! for Damon','K12205',50,10).
packing_plan(,1,['14R405:M0001509','14R4313:0027007'],1,[send],'is 6th! for Damon','K12205',50,10).

#+end_src
