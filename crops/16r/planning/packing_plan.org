% this is 16r/planning/packing_plan.org
% generated by ../maize/crops/merge_plan_data.perl
% on Fri May 20 13:07:18 CDT 2016 for crop 16r.
%
% The most recent plan data are derived from ../demeter/data/plan.pl for the 15r.  These
% are substituted into the packing_plan.pl data for 15r to generate
% packing_plan/10 facts that are in the previous sequence, but not numbered.
%
% Wait until all packing_plan/10 facts are written, and in the correct sequence,
% before re-running the script to insert the sequence numbers for planting!




* general remarks


** background <2017-05-20 Sat> :toni:

The general plan is to have a small field since we have a lot to do, both
for work and fun in the field; a lot to do in the lab; and lots of
manuscripts and proposals to write.




** goals <2016-05-20 Fr7> 					       :toni:


Goals are:
   + capture imagery for drone algorithm development
      + fly entire field and farms
      + asymmetric targets, placed asymmetrically on watering posts; these
        need to be durable for the whole season so they don't have to be
        put up and taken down each time
      + perpendicular and top-down for all fields; and oblique angles; and
        circling to keep landmarks in view for mosaicing
      + along and across rows
      + les8, les7, les23
      + doubled haploids from Candi

   + instrumentation development and experimentation
   + further back-cross peter's lines
   + try to unstick stuck pedigrees with row shading; les5, les15, les20
   + push along branches that are close to finishing
   + stay in the lab and process data!
   + 80 rows max


   + PHOTOGRAPH BEFORE POLLINATIONS!

   + finish mutant data collection before pollinations



** weather




** strategy and tables

In 17r, need to do serious bulking and push recessives along.  Relatively
few bcs in dominants, and those that are are mostly stalled or rebuilds.



#+tblname: planning
| type             | num rows | modified |
|------------------+----------+----------|
| elite            |        5 |        5 |
| double haploid   |        5 |        5 |
| selves           |      3.5 |      3.5 |
| Les15            |       20 |        0 |
| lls1*            |        6 |        0 |
| other recess     |     29.5 |     11.5 |
| bulks for flying |       12 |       13 |
| dominants        |     29.5 |     27.5 |
| miscellany       |     15.5 |        0 |
| total non-inbred |     197. |     65.5 |
| inbred           |          |       25 |
| total rows       |          |     90.5 |
#+TBLFM: @11$3=vsum(@2..@10)::@13$3=vsum(@11..@12)










M14 compensatn rate =  1.6560510 from 15r

66 1st
45 2nd
0 3rd

#+NAME:inbreds
|                                           |      S |      W |     M |    B | total rows by plntg |
|-------------------------------------------+--------+--------+-------+------+---------------------|
| over-planting factors                     |    1.3 |    1.3 |   1.7 |  1.3 |                 0.5 |
|-------------------------------------------+--------+--------+-------+------+---------------------|
| 1st plntg lines                           |     11 |     11 |    21 |    8 |                     |
| 2nd plntg lines                           |      7 |     13 |    12 |    8 |                     |
|-------------------------------------------+--------+--------+-------+------+---------------------|
| 1st plntg ears                            |     33 |     33 |    63 |   24 |                     |
| 2nd plntg ears                            |     21 |     39 |    36 |   24 |                     |
|-------------------------------------------+--------+--------+-------+------+---------------------|
| 1st plntg rows, inc losses                |  2.145 |  2.145 | 5.355 | 1.56 |              11.205 |
| 2nd plntg rows, inc losses                |  1.365 |  2.535 |  3.06 | 1.56 |                8.52 |
| true 1st plntg rows + some 2nd plntg rows | 2.8275 | 3.4125 | 6.885 | 2.34 |              15.465 |
| actual 3rd plntg rows                     |      0 |      0 |     0 |    0 |                   0 |
| rows by inbreds, all plantings            | 4.1925 | 5.9475 | 9.945 |  3.9 |                     |
|-------------------------------------------+--------+--------+-------+------+---------------------|
| rounded 1st plntg rows                    |      3 |      3 |     7 |    2 |                  15 |
| rounded 2nd plntg rows                    |      2 |      3 |     3 |    2 |                  10 |
| rounded 3rd plntg rows                    |      0 |      0 |     0 |    0 |                   0 |
| total rounded rows                        |      5 |      6 |    10 |    4 |                  25 |
|                                           |        |        |       |      |                     |
#+TBLFM: @5$2=@-2*3::@5$3=@-2*3::@5$4=@-2*3::@5$5=@-2*3::@6$2=@-2*3::@6$3=@-2*3::@6$4=@-2*3::@6$5=@-2*3::@7$2=(@-2/20)*@-5::@7$3=(@-2/20)*@-5::@7$4=(@-2/20)*@-5::@7$5=(@-2/20)*@-5::@8$2=(@-2/20)*@-6::@8$3=(@-2/20)*@-6::@8$4=(@-2/20)*@-6::@8$5=(@-2/20)*@-6::@8$6=vsum($2..$5)::@9$2=@-2+(@-1*@2$6)::@9$3=@-2+(@-1*@2$6)::@9$4=@-2+(@-1*@2$6)::@9$5=@-2+(@-1*@2$6)::@9$6=vsum($2..$5)::@10$6=vsum($2..$5)::@11$2=vsum(@8..@10)::@11$3=vsum(@8..@10)::@11$4=vsum(@8..@10)::@11$5=vsum(@8..@10)::@12$2=round(@-3)::@12$3=round(@-3)::@12$4=round(@-3)::@12$5=round(@-3)::@12$6=vsum($2..$5)::@13$2=round(@-5)+1::@13$3=round(@-5)::@13$4=round(@-5)::@13$5=round(@-5)::@13$6=vsum($2..$5)::@14$2=round(@-4)::@14$3=round(@-4)::@14$4=round(@-4)::@14$5=round(@-4)::@14$6=vsum($2..$5)::@15$2=vsum(@12..@14)::@15$3=vsum(@12..@14)::@15$4=vsum(@12..@14)::@15$5=vsum(@12..@14)::@15$6=vsum($2..$5)


#+NAME:rows
|----------------------------------------+-------|
| full rows elite/doubled haploids       |    10 |
| half rows mutants                      |   111 |
| full rows inbreds                      |    25 |
| total stakes                           |   146 |
| total physical rows                    |  90.5 |
| gerry's rows                           |    20 |
| total rows needed, exclusive of border | 110.5 |
|                                        |       |
#+TBLFM: @1$2=10::@3$2=remote(inbreds,@15$6)::@4$2=@1 + @2 + @3::@5$2=@1 + @3 + @2/2::@7$2=@5+@6





* TODO %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% elite line %%%%%%%%%%%%%%%%%%%%%%%%%%%%%

#+begin_src prolog  :tangle yes

packing_plan(,1,[elite],1,[fly],'','','16R',60,20).
packing_plan(,1,[elite],1,[fly],'','','16R',60,20).
packing_plan(,1,[elite],1,[fly],'','','16R',60,20).
packing_plan(,1,[elite],1,[fly],'','','16R',60,20).
packing_plan(,1,[elite],1,[fly],'','','16R',60,20).




#+end_src





* TODO %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% inbreds %%%%%%%%%%%%%%%%%%%%%%%%%



** TODO 3rd planting



#+begin_src prolog :tangle yes
packing_plan(,1,['09R201:S0xxxxxx x 09R201:S0xxxxxx'],3,[inbred],'','','16R',20,20).
packing_plan(,1,['09R301:W0xxxxxx x 09R301:W0xxxxxx'],3,[inbred],'','','16R',20,20).
packing_plan(,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],3,[inbred],'','','16R',20,20).
packing_plan(,1,['13R504:B0xxxxxx x 13R504:B0xxxxxx'],3,[inbred],'','','16R',20,20).
packing_plan(,1,['13R504:B0xxxxxx x 13R504:B0xxxxxx'],3,[inbred],'','','16R',20,20).
#+end_src



** TODO 1st planting



#+begin_src prolog :tangle yes

packing_plan(,1,['09R201:S0xxxxxx x 09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx x 09R201:S0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx x 09R201:S0xxxxxx'],1,[inbred],'','',20,20).




packing_plan(,1,['09R301:W0xxxxxx x 09R301:W0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx x 09R301:W0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx x 09R301:W0xxxxxx'],1,[inbred],'','',20,20).



packing_plan(,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],1,[inbred],'','',20,20).





packing_plan(,1,['13R504:B0xxxxxx x 13R504:B0xxxxxx'],1,[inbred],'','',20,20).
packing_plan(,1,['13R504:B0xxxxxx x 13R504:B0xxxxxx'],1,[inbred],'','',20,20).



#+end_src

   
** TODO 2nd planting 




#+begin_src prolog :tangle yes

packing_plan(,1,['09R201:S0xxxxxx x 09R201:S0xxxxxx'],2,[inbred],'','',20,20).
packing_plan(,1,['09R201:S0xxxxxx x 09R201:S0xxxxxx'],2,[inbred],'','',20,20).




packing_plan(,1,['09R301:W0xxxxxx x 09R301:W0xxxxxx'],2,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx x 09R301:W0xxxxxx'],2,[inbred],'','',20,20).
packing_plan(,1,['09R301:W0xxxxxx x 09R301:W0xxxxxx'],2,[inbred],'','',20,20).



packing_plan(,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],2,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],2,[inbred],'','',20,20).
packing_plan(,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],2,[inbred],'','',20,20).



packing_plan(,1,['13R504:B0xxxxxx x 13R504:B0xxxxxx'],2,[inbred],'','',20,20).
packing_plan(,1,['13R504:B0xxxxxx x 13R504:B0xxxxxx'],2,[inbred],'','',20,20).

#+end_src






* TODO %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  mutants %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



** TODO %%%%%%%%%%%%%% 3.5 rows selves %%%%%%%%%%%%%%%%%%%

+ 1st planting as usual; these are fairly far along, so may not be
  completely fast.

*** TODO lls1  1 half-row

#+begin_src prolog  :tangle yes
packing_plan(,1,['12N205:S0041906 x 12N3738:0000804'],1,[self],'is 3rd; alternate for forebear of family 4057','K1702','16R',15,10).
#+end_src


*** TODO lls1 121D K3402  2 half-rows



#+begin_src prolog :tangle yes

packing_plan(,1,['15R305:W0003009 x 15R4331:0004904'],1,[self],'is 3rd','K3402','16R',15,10).


packing_plan(,1,['15R405:M0003904 x 15R3877:0005004'],1,[self],'is 2nd','K3402','16R',15,10).




#+end_src


*** TODO lls1121D K5302   2 half-rows


#+begin_src prolog :tangle yes
packing_plan(,1,['15R305:W0002701 x 15R4211:0005516'],1,[self],'is 3rd','K5302','16R',15,10).


packing_plan(,1,['15R405:M0003710 x 15R4213:0005618'],1,[self],'is 3rd','K5302','16R',15,10).



#+end_src







*** TODO les23   2 half-rows


#+begin_src prolog :tangle yes


packing_plan(,1,['15R205:S0000501 x 15R4231:0009207'],1,[self],'is 3rd','K1802','16R',15,10).


packing_plan(,1,['15R205:S0002605 x 15R4247:0009302'],1,[self],'is 3rd; check sex organs; 15r had excellent tassel and no ear','K16306','16R',15,10).







#+end_src





** TODO %%%%%%%%%%%%%%%%%%%%%% 11.5 rows recessives %%%%%%%%%%%%%%%%%%%%%%

*** TODO les23 11 half-rows

#+begin_src prolog :tangle yes



packing_plan(,1,['15R4339:0006503 x 15R4339:0006503'],1,[check,'W'],'is 5th selfed','K1802','16R',15,10).

packing_plan(,1,['15R4340:0006601 x 15R4340:0006601'],1,[check,'M'],'is 4th selfed','K1802','16R',15,10).



packing_plan(,1,['15R4370:0006703 x 15R4370:0006703'],1,[check,'S'],'is 3rd selfed','K1804','16R',15,10).

packing_plan(,1,['15R4341:0006805 x 15R4341:0006805'],1,[check,'W'],'is 4th selfed','K1804','16R',15,10).

packing_plan(,1,['15R4371:0006904 x 15R4371:0006904'],1,[check,'M'],'is 3rd selfed','K1804','16R',15,10).




packing_plan(,1,['15R4342:0007002 x 15R4342:0007002'],1,[check,'S'],'is 3rd selfed','K3514','16R',15,10).

packing_plan(,1,['15R4343:0007101 x 15R4343:0007101'],1,[check,'W'],'is 4th selfed','K3514','16R',15,10).

packing_plan(,1,['15R4372:0007201 x 15R4372:0007201'],1,[check,'M'],'is 3rd selfed','K3514','16R',15,10).




packing_plan(,1,['15R4344:0007301 x 15R4344:0007301'],1,[check,'W'],'is 3rd selfed','K16306','16R',15,10).

packing_plan(,1,['15R4373:0007403 x 15R4373:0007403'],1,[check,'M'],'is 3rd selfed','K16306','16R',15,10).

packing_plan(,1,['15R305:W0000908 x 15R4373:0007409'],1,[check,'S','W','M'],'dominant mutant in row? contaminant?','K16306','16R',15,10).












#+end_src








*** TODO les3  6 half-rows


% may like cooler weather, lots of light, very late developping, must cross
% blindly, favored lower leaves in 12r.  Phenotype variable, from small
% necroses to brown necroses on midrib to yellow-green splotchies on lower
% or upper leaves.  Functionally recessive, possibly malleable phenotype.
%
% In 12n, a strong necrotic phenotype developed well before flowering.


#+begin_src prolog :tangle yes



packing_plan(,1,['15R4374:0007503 x 15R4374:0007503'],2,[check,'S'],'is 2nd selfed; late developping phenotype; yellow-green splotchies, earlier in the process of lesion formation; very different from K11903; favored lower leaves in 12r; cross all plants blindly; may be functionally recessive; excellent light-brown necrotic lesion phenotype 8.1 in 12n, well before flowering; evidence of small, slight oscillations','K11906','16R',15,10).

packing_plan(,1,['15R4345:0007602 x 15R4345:0007602'],2,[check,'S'],'is 2nd selfed; late developping phenotype; yellow-green splotchies, earlier in the process of lesion formation; very different from K11903; favored lower leaves in 12r; cross all plants blindly; may be functionally recessive; excellent light-brown necrotic lesion phenotype 8.1 in 12n, well before flowering; evidence of small, slight oscillations','K11906','16R',15,10).


packing_plan(,1,['15R4375:0007701 x 15R4375:0007701'],2,[check,'W'],'is 2nd selfed; late developping phenotype; yellow-green splotchies, earlier in the process of lesion formation; very different from K11903; favored lower leaves in 12r; cross all plants blindly; may be functionally recessive; excellent light-brown necrotic lesion phenotype 8.1 in 12n, well before flowering; evidence of small, slight oscillations','K11906','16R',15,10).

packing_plan(,1,['15R4346:0007801 x 15R4346:0007801'],2,[check,'W'],'is 2nd selfed; late developping phenotype; yellow-green splotchies, earlier in the process of lesion formation; very different from K11903; favored lower leaves in 12r; cross all plants blindly; may be functionally recessive; excellent light-brown necrotic lesion phenotype 8.1 in 12n, well before flowering; evidence of small, slight oscillations','K11906','16R',15,10).


packing_plan(,1,['15R4376:0007903 x 15R4376:0007903'],2,[check,'M'],'is 2nd selfed; late developping phenotype; yellow-green splotchies, earlier in the process of lesion formation; very different from K11903; favored lower leaves in 12r; cross all plants blindly; may be functionally recessive; excellent light-brown necrotic lesion phenotype 8.1 in 12n, well before flowering; evidence of small, slight oscillations','K11906','16R',15,10).

packing_plan(,1,['15R4377:0008008 x 15R4377:0008008'],2,[check,'M'],'is 2nd selfed; late developping phenotype; yellow-green splotchies, earlier in the process of lesion formation; very different from K11903; favored lower leaves in 12r; cross all plants blindly; may be functionally recessive; excellent light-brown necrotic lesion phenotype 8.1 in 12n, well before flowering; evidence of small, slight oscillations','K11906','16R',15,10).














#+end_src












*** TODO les5 6 half-rows


#+begin_src prolog :tangle yes




packing_plan(,1,['15R205:S0002207 x 15R0685:0009103'],2,[self,'S'],'is 1st; should be recessive; be ready to bc if not','K68503','16R',15,10).

packing_plan(,1,['15R305:W0003209 x 15R0685:0009103'],2,[self,'W'],'is 1st; should be recessive; be ready to bc if not','K68503','16R',15,10).

packing_plan(,1,['15R405:M0003505 x 15R0685:0009103'],2,[self,'M'],'is 1st; should be recessive; be ready to bc if not','K68503','16R',15,10).



packing_plan(,1,['15R205:S0002205 x 15R0685:0009107'],2,[self,'S'],'is 1st; should be recessive; be ready to bc if not','K68507','16R',15,10).

packing_plan(,1,['15R305:W0003115 x 15R0685:0009107'],2,[self,'W'],'is 1st; should be recessive; be ready to bc if not','K68507','16R',15,10).

packing_plan(,1,['15R405:M0003507 x 15R0685:0009107'],2,[self,'M'],'is 1st; should be recessive; be ready to bc if not','K68507','16R',15,10).



#+end_src














** TODO %%%%%%%%%%%%%%%%%%%% 13 rows bulks for flying %%%%%%%%%%%%%

*** TODO Les4   18 half-rows

+ M14, K0302 doubles available; otherwise done for now

+ W23, K0303 done

+ Mo20W, K2106 done

#+begin_src prolog :tangle yes



packing_plan(,1,['13R205:S0002205 x 13R4082:0005502'],1,[inc,self,'B'],'is 6th!; additional bulking good','K0302','16R',15,10).
packing_plan(,1,['13R205:S0002205 x 13R4082:0005502'],2,[inc,self,'B'],'is 6th!; additional bulking good','K0302','16R',15,10).



packing_plan(,1,['13R305:W0000702 x 13R4083:0005603'],1,[inc,self],'is 6th!; check osc; forbear male had great phenotype, smaller lesions on lower leaves than Mo20W on 9.1 in 12n; sheath lesions were more diagnostic','K0302','16R',15,10).
packing_plan(,1,['13R305:W0000702 x 13R4083:0005603'],2,[inc,self],'is 6th!; check osc; forbear male had great phenotype, smaller lesions on lower leaves than Mo20W on 9.1 in 12n; sheath lesions were more diagnostic','K0302','16R',15,10).




packing_plan(,1,['14R205:S0000215 x 14R4229:0009701'],1,[inc,self,'B'],'is 6th!','K0303','16R',15,10).
packing_plan(,1,['14R205:S0000215 x 14R4229:0009701'],2,[inc,self,'B'],'is 6th!','K0303','16R',15,10).



packing_plan(,1,['12R405:M0000310 x 12R3587:0023110'],1,[inc,self],'is 6th!; phenotype 9.1 in 12n','K0303','16R',15,10).
packing_plan(,1,['12R405:M0000310 x 12R3587:0023110'],2,[inc,self],'is 6th!; phenotype 9.1 in 12n','K0303','16R',15,10).




packing_plan(,1,['12N205:S0036705 x 12N3948:0017506'],1,[inc,self,'B'],'is 6th!; check osc; male had good phenotype 9.1 in 12n','K2101','16R',15,10).
packing_plan(,1,['12N205:S0036705 x 12N3948:0017506'],2,[inc,self,'B'],'is 6th!; check osc; male had good phenotype 9.1 in 12n','K2101','16R',15,10).



packing_plan(,1,['12N305:W0038310 x 12N3949:0017706'],1,[inc,self],'is 6th!; in 12n, male had weak phenotype 9.1, better by 13.1, but good phenotype by 15.1','K2101','16R',15,10).
packing_plan(,1,['12N305:W0038310 x 12N3949:0017706'],2,[inc,self],'is 6th!; in 12n, male had weak phenotype 9.1, better by 13.1, but good phenotype by 15.1','K2101','16R',15,10).


    

packing_plan(,1,['11N405:M0032808 x 11N3419:0010704'],1,[self,inc],'is 6th!; addtnl bulking good; check osc; male had good phenotype 9.1 in 12n','K2101','16R',15,10).
packing_plan(,1,['11N405:M0032808 x 11N3419:0010704'],2,[self,inc],'is 6th!; addtnl bulking good; check osc; male had good phenotype 9.1 in 12n','K2101','16R',15,10).



packing_plan(,1,['15R305:W0000711 x 15R4352:0010904'],1,[inc,self,'B'],'is 6th','K2106','16R',15,10).
packing_plan(,1,['15R305:W0000711 x 15R4352:0010904'],2,[inc,self,'B'],'is 6th','K2106','16R',15,10).


packing_plan(,1,['15R405:M0001101 x 15R4353:0011002'],1,[inc,self,'B'],'is 6th','K2106','16R',15,10).
packing_plan(,1,['15R405:M0001101 x 15R4353:0011002'],2,[inc,self,'B'],'is 6th','K2106','16R',15,10).


#+end_src
















*** TODO Les8    8 half-rows

+ Mo20W, K0604 done

+ W23, K0604 done; doubles available


#+begin_src prolog :tangle yes



packing_plan(,1,['14R405:M0001105 x 14R4283:0021405'],1,[inc,self,'B'],'is 6th!; may be fast','K0604','16R',15,10).
packing_plan(,1,['14R405:M0001105 x 14R4283:0021405'],2,[inc,self,'B'],'is 6th!; may be fast','K0604','16R',15,10).



packing_plan(,1,['14R205:S0000105 x 14R4284:0021512'],1,[inc,self,'B'],'is 6th!','K2405','16R',15,10).
packing_plan(,1,['14R205:S0000105 x 14R4284:0021512'],2,[inc,self,'B'],'is 6th!','K2405','16R',15,10).



packing_plan(,1,['12N305:W0039207 x 12N3614:0024110'],1,[inc,self],'is 6th!; poor yield on 13r selves','K2405','16R',15,10).
packing_plan(,1,['12N305:W0039207 x 12N3614:0024110'],2,[inc,self],'is 6th!; poor yield on 13r selves','K2405','16R',15,10).



packing_plan(,1,['14R405:M0001103 x 14R4285:0021603'],1,[inc,self,'B'],'is 6th!','K2405','16R',15,10).
packing_plan(,1,['14R405:M0001103 x 14R4285:0021603'],2,[inc,self,'B'],'is 6th!','K2405','16R',15,10).



#+end_src



	     







** TODO %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 27.5 rows  primary and secondary dominants %%%%%%%%%%%%%%%%%%%%%%%%%

These guys are either very early or very late in bcs.




*** TODO Les1  1 half-row

+ abandoned K0104 for now

#+begin_src prolog :tangle yes

packing_plan(,1,['15R405:M0001411 x 15R4384:0009402'],2,['M'],'is 2nd; branch rebuild','K0106','16R',15,10).

#+end_src





*** TODO Les2  4 half-rows

#+begin_src prolog :tangle yes

packing_plan(,1,['14R305:W0000704 x 14R4220:0006819'],1,['W'],'is 4th; repeat of 15r','K0202','16R',15,10).
packing_plan(,1,['13R405:M0002608 x 13R4076:0004202'],1,['M'],'is 5th; repeat of 15r','K0202','16R',15,10).

packing_plan(,1,['15R305:W0000906 x 15R4351:0010005'],2,['W'],'is 2nd; branch rebuild','K0207','16R',15,10).

packing_plan(,1,['15R305:W0002901 x 15R4389:0010801'],2,['W'],'is 2nd; branch rebuild; later phe in 15r','K0207','16R',15,10).


#+end_src


*** TODO Les2-N845A  3 half-rows

#+begin_src prolog :tangle yes


packing_plan(,1,['13R405:M0002601 x 13R4148:0019102'],1,['M'],'is 5th; repeat 15r','K5515','16R',15,10).


packing_plan(,1,['14R205:S0000607 x 14R4275:0020306'],1,['S'],'is 4th','K5525','16R',15,10).


packing_plan(,1,['14R305:W0000808 x 14R3937:0020415'],2,['W'],'is 2nd; may be chlorotic; one mutant in 15r','K5525','16R',15,10).





#+end_src



*** TODO Les6  1 half-row

#+begin_src prolog :tangle yes

packing_plan(,1,['14R405:M0001101 x 14R4278:0020905'],1,['M'],'is 5th; repeat of 15r','K2212','16R',15,10).

#+end_src



*** TODO Les7  6 half-rows

+ Mo20W, K0509 done for now

+ M14, K0509 doubles available; otherwise done for now

+ W23, K0509 appears stalled

#+begin_src prolog :tangle yes

packing_plan(,1,['10R305:W0001502 x 10R1035:0021906'],1,['W'],'is 3rd; no phe 15r; ancestor of 13R305:W0000803; stalled branch?; pick one of two','K0509','16R',15,10).

packing_plan(,1,['10R305:W0001511 x 10R1035:0021903'],1,['W'],'is 3rd; no phe 15r; alternate for 11N305:W0039501; stalled branch?; pick one of two','K0509','16R',15,10).



packing_plan(,1,['11N305:W0039501 x 11N3192:0013810'],1,['W'],'is 4th; no phe 15r; forebear of 13R305:W000080; stalled branch?; pick one of two','K0509','16R',15,10).



packing_plan(,1,['11N305:W0030810 x 11N3192:0013803'],1,['W'],'is 4th; no phe 15r; alternate for 11N305:W0039501; stalled branch?; pick one of two','K0509','16R',15,10).



packing_plan(,1,['13R305:W0000803 x 13R3974:0021303'],1,['W'],'is 5th; no phe 15r; crummy tassels in 14r; repeat; stalled branch?','K2312','16R',15,10).



packing_plan(,1,['14R205:S0000109 x 14R4280:0021111'],1,['S'],'is 5th; no phe 15r','K2312','16R',15,10).







#+end_src














*** TODO Les9  2 half-rows


+ Mo20W, K0707 small ears

+ W23, K0707 self problematic

+ still a fair amount of 11N205:S0036710, so going with that.


#+begin_src prolog :tangle yes



packing_plan(,1,['15R205:S0000401 x 15R4391:0012707'],1,['S'],'is 5th','K2506','16R',15,10).



packing_plan(,1,['14R405:M0001308 x 14R4286:0021905'],1,['M'],'is 4th; repeat 15r; poor germination in 15r; overplant?','K2506','16R',15,10).



#+end_src



*** TODO Les10 3 half-rows


+ M14, K0801 consistently had crappy tassels and no ears in 2nd; 1st low; rebuild from S

+ chronic ear issues in K2606


#+begin_src prolog :tangle yes
packing_plan(,1,['15R205:S0002501 x 15R4395:0013304'],1,['S'],'is 4th; fast; forebear had no ears in 12r; male parent had bad tassel in 14r','K2606','16R',15,10).


    
packing_plan(,1,['12R405:M0001501 x 12R3451:0028009'],2,['M'],'is 2nd; may be fast; alternate branch for 15R405:M0003909','K2606','16R',15,10).

packing_plan(,1,['15R405:M0003909 x 15R4398:0013904'],1,['M'],'is 3rd; may be fast; tassel looked sterile in 15r, but this is the progeny','K2606','16R',15,10).




#+end_src



*** TODO Les11   3 half-rows

#+begin_src prolog :tangle yes
packing_plan(,1,['14R405:M0001304 x 14R4162:0022908'],1,['M'],'is 5th; repeat 15r; pick one of three','K0901','16R',15,10).


packing_plan(,1,['14R405:M0003903 x 14R4162:0022908'],1,['M'],'is 5th; alternate for 14R405:M0001304; pick one of three','K0901','16R',15,10).


packing_plan(,1,['14R405:M0003906 x 14R4162:0022908'],1,['M'],'is 5th; alternate for 14R405:M0001304; pick one of three','K0901','16R',15,10).




#+end_src




*** TODO Les12  3 half-rows

+ Mo20W, K1001 stalled
+ Mo20W, K2711 may be stalled

#+begin_src prolog :tangle yes

packing_plan(,1,['11N205:S0034309 x 11N3189:0016803'],1,['S'],'is 3rd; repeat 15r; clear phe 15r; alternate branch for 12R205:S0002216; given metabolic effects, cut out most wild-types','K1001','16R',15,10).



packing_plan(,1,['12R205:S0002216 x 12R3629:0028403'],1,['S'],'is 4th; repeat of 13r, 14r, 15r; clear phe 15r; a few ok tassels in 14r; check osc; missed in 12n; phenotype poor; given metabolic effects, cut out most wild-types','K1001','16R',15,10).




packing_plan(,1,['12R205:S0002217 x 12R3454:0028708'],1,['S'],'is 3rd; repeat of 13r, 14r, 15r; good ears and tassels on some plants in 14r; modifier jump in 12n; given metabolic effects, cut out most wild-types','K2711','16R',15,10).






#+end_src





*** TODO Les13  3 half-rows

#+begin_src prolog :tangle yes

packing_plan(,1,['15R305:W0003003 x 15R4402:0015101'],1,['W'],'is 3rd','K1109','16R',15,10).



packing_plan(,1,['14R405:M0001803 x 14R4166:0023701'],1,['M'],'is 5th; looked like W23 in 15r; repeat 15r','K1109','16R',15,10).




packing_plan(,1,['15R405:M0001619 x 15R1715:0015202'],2,['M'],'is 2nd','K2805','16R',15,10).








#+end_src






*** TODO Les17   4 half-rows


+ the more lesions and the more rapid the lesion development, the poorer
  the ears, up to no ears 


#+begin_src prolog :tangle yes

packing_plan(,1,['12R405:M0011105 x 12R3242:0030209'],1,['M'],'is 5th; repeat 15r; many plants had ok tassels and small ears in 14r','K3007','16R',15,10).


packing_plan(,1,['12R405:M0009910 x 12R3242:0030202'],1,['M'],'is 5th; alternate for 12R405:M0011105','K3007','16R',15,10).


packing_plan(,1,['12R405:M0010820 x 12R3242:0030209'],1,['M'],'is 5th; alternate for 12R405:M0011105','K3007','16R',15,10).


packing_plan(,1,['12R405:M0011110 x 12R3242:0030203'],1,['M'],'is 5th; alternate for 12R405:M0011105','K3007','16R',15,10).




#+end_src





*** TODO Les18   2 half-rows

+ M14, K1411 has a lot of crummy tassel

#+begin_src prolog :tangle yes

packing_plan(,1,['12R405:M0008203 x 12R3645:0030503'],1,['M'],'is 4th; repeat 15r; alternate branch to 12ns; tendency to crummy tassel','K1411','16R',15,10).


packing_plan(,1,['12N405:M0038707 x 12N4030:0030504'],1,['M'],'is 5th; repeat 15r; tendency to crummy tassel','K1411','16R',15,10).






#+end_src


	     


*** TODO Les19   1 half-row

#+begin_src prolog :tangle yes

packing_plan(,1,['15R405:M0001310 x 15R4401:0014902'],1,['M'],'is 5th','K3206','16R',15,10).

#+end_src








*** TODO Les20-N2457  14 half-rows


+ a mess; kernel counts often low, good phenotype but no tassels

+ steps not planted out have cl < 50

+ do in Hawai'i?; but let's see how the 15r corn works out


#+begin_src prolog :tangle yes



packing_plan(,1,['15R205:S0002505 x 15R0686:0015302'],2,['S'],'is 1st; recreated from martys; alternate','K68602','16R',15,10).

packing_plan(,1,['15R305:W0002805 x 15R0686:0015302'],2,['W'],'is 1st; recreated from martys; alternate','K68602','16R',15,10).

packing_plan(,1,['15R405:M0003411 x 15R0686:0015302'],2,['M'],'is 1st; recreated from martys; alternate','K68602','16R',15,10).



packing_plan(,1,['15R205:S0002411 x 15R0686:0015307'],2,['S'],'is 1st; recreated from martys','K68607','16R',15,10).

packing_plan(,1,['15R305:W0003106 x 15R0686:0015307'],2,['W'],'is 1st; recreated from martys','K68607','16R',15,10).

packing_plan(,1,['15R405:M0001601 x 15R0686:0015307'],2,['M'],'is 1st; recreated from martys','K68607','16R',15,10).







packing_plan(,1,['15R205:S0002306 x 15R4403:0015507'],2,['S'],'is 3rd','K7110','16R',15,10).



packing_plan(,1,['15R305:W0003004 x 15R2930:0015905'],2,['W'],'is 2nd','K7110','16R',15,10).

packing_plan(,1,['15R305:W0003013 x 15R4044:0016008'],2,['W'],'is 2nd; alternate for 15R2930:0015905','K7110','16R',15,10).

packing_plan(,1,['15R305:W0002903 x 15R4177:0016107'],2,['W'],'is 3rd','K7110','16R',15,10).

packing_plan(,1,['15R305:W0002904 x 15R3654:0016401'],2,['W'],'is 5th','K7110','16R',15,10).



packing_plan(,1,['15R405:M0003701 x 15R1129:0015401'],2,['M'],'is 2nd','K7110','16R',15,10).

packing_plan(,1,['15R405:M0003307 x 15R2931:0016704'],2,['M'],'is 3rd','K7110','16R',15,10).

packing_plan(,1,['15R405:M0003804 x 15R4406:0016801'],2,['M'],'is 4th','K7110','16R',15,10).





















#+end_src




*** TODO Les21    1 half-row

#+begin_src prolog :tangle yes

packing_plan(,1,['14R405:M0001610 x 14R4048:0026106'],1,['M'],'is 4th; repeat 15r; check osc; stems may be brittle','K3311','16R',15,10).



#+end_src







*** TODO Les21-N1442   3 half-row

#+begin_src prolog :tangle yes

packing_plan(,1,['15R205:S0000101 x 15R4183:0017105'],1,[inc,self,'B'],'is 6th!; misplaced in field','K7205','16R',15,10).


packing_plan(,1,['15R305:W0000701 x 15R4363:0017408'],1,[check],'is 6th!','K7205','16R',15,10).


packing_plan(,1,['15R305:W0000704 x 15R4363:0017408'],1,[check],'is 6th!','K7205','16R',15,10).





#+end_src




















*** TODO Les*-mi1    1 half-row

#+begin_src prolog :tangle yes


packing_plan(,1,['15R205:S0000510 x 15R4412:0018104'],1,['S'],'is 5th','K12205','16R',15,10).


#+end_src























* TODO %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Gardner doubled haploids %%%%%%%%%%%%%%%%

#+begin_src prolog  :tangle yes

packing_plan(,1,['16R0687:0000000 x 16R0687:0000000'],1,[fly],'Gardner landrace doubled haploid','K68700','16R',15,10).
packing_plan(,1,['16R0688:0000000 x 16R0688:0000000'],1,[fly],'Gardner landrace doubled haploid','K68800','16R',15,10).
packing_plan(,1,['16R0689:0000000 x 16R0689:0000000'],1,[fly],'Gardner landrace doubled haploid','K68900','16R',15,10).
packing_plan(,1,['16R0690:0000000 x 16R0690:0000000'],1,[fly],'Gardner landrace doubled haploid','K69000','16R',15,10).
packing_plan(,1,['16R0691:0000000 x 16R0691:0000000'],1,[fly],'Gardner landrace doubled haploid','K69100','16R',15,10).
packing_plan(,1,['16R0692:0000000 x 16R0692:0000000'],1,[fly],'Gardner landrace doubled haploid','K69200','16R',15,10).    
packing_plan(,1,['16R0693:0000000 x 16R0693:0000000'],1,[fly],'Gardner landrace doubled haploid','K69300','16R',15,10).    
packing_plan(,1,['16R0694:0000000 x 16R0694:0000000'],1,[fly],'Gardner landrace doubled haploid','K69400','16R',15,10).    
packing_plan(,1,['16R0695:0000000 x 16R0695:0000000'],1,[fly],'Gardner landrace doubled haploid','K69500','16R',15,10).    
packing_plan(,1,['16R0696:0000000 x 16R0696:0000000'],1,[fly],'Gardner landrace doubled haploid','K69600','16R',15,10).    
packing_plan(,1,['16R0697:0000000 x 16R0697:0000000'],1,[fly],'Gardner landrace doubled haploid','K69700','16R',15,10).    
packing_plan(,1,['16R0698:0000000 x 16R0698:0000000'],1,[fly],'Gardner landrace doubled haploid','K69800','16R',15,10).    
packing_plan(,1,['16R0699:0000000 x 16R0699:0000000'],1,[fly],'Gardner landrace doubled haploid','K69900','16R',15,10).    
packing_plan(,1,['16R0700:0000000 x 16R0700:0000000'],1,[fly],'Gardner landrace doubled haploid','K70000','16R',15,10).    
packing_plan(,1,['16R0701:0000000 x 16R0701:0000000'],1,[fly],'Gardner landrace doubled haploid','K70100','16R',15,10).    
packing_plan(,1,['16R0702:0000000 x 16R0702:0000000'],1,[fly],'Gardner landrace doubled haploid','K70200','16R',15,10).    
    



#+end_src


* TODO %%%%%%%%%%%%%%%%%%%%%%%%%%%%% demo corn %%%%%%%%%%%%%%%%%%%%%%%%


Field at Bradford, 17' rows, 6 rows 30 cl each. Strong lesions, plant late.


I am pretty sure the big metabolic effect 9short, spindly) for W23 is with Les7, as we
planted out all the steps in 13r and sampled.  So use this demo to confirm
that. 

|---------+----------------+--------+--------+------+--------+--------+---------+---------+-----------------------------------------------------------|
| pri dom | Les7           | K0509  | S      |    6 | y      | y      | y       |         |                                                           |
| pri dom | Les7           | K0509  | W      |    5 |        |        |         |         | stalled 13r? pedigree steps planted 16r                   |
| pri dom | Les7           | K0509  | M      |    6 | y      | y      | y       | some?   |                                                           |
| pri dom | Les7           | K2312  | S      |    5 |        |        |         |         | stalled 14r? no phe 15r                                   |
| pri dom | Les7           | K2312  | W      |    6 |        |        |         |         | deferred in 16r                                           |
| pri dom | Les7           | K2312  | M      |    6 |        |        |         |         | deferred in 16r                                           |
|---------+----------------+--------+--------+------+--------+--------+---------+---------+-----------------------------------------------------------|



#+begin_src prolog :tangle no




#+end_src


table for Susan and Sherry

| row | numerical genotype                | symbolic genotype        | single seed tracking number | commments  |
|-----+-----------------------------------+--------------------------+-----------------------------+------------|
| 991 | 14R4091:0011801 x 14R4091:0011806 | Mo20W/Les7 6th bc bulked | K0509                       |            |
| 992 | 13R305:W0000803 x 13R3974:0021303 | W23/Les7 5th bc          | K0509                       | no phe 15r |
| 993 | 14R3975:0011905 x 14R3975:0011906 | M14/Les7 6th bc bulked   | K0509                       |            |
| 994 | 14R205:S0000109 x 14R4280:0021111 | Mo20W/Les7 5th bc        | K2312                       | no phe 15r |
| 995 | 15R305:W0000709 x 15R4360:0012605 | W23/Les7 6th bc          | K2312                       |            |
| 996 | 14R405:M0001211 x 14R4282:0021308 | M14/Les7 6th bc          | K2312                       |            |






