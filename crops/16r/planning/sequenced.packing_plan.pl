% this is 16r/planning/sequenced.packing_plan.pl
% generated by ../maize/crops/merge_plan_data.perl using operation sequence 
% on Mon May 23 23:51:19 CDT 2016 for crop 16r.


% this is 16r/planning/packing_plan.org
% generated by ../maize/crops/merge_plan_data.perl
% on Fri May 20 13:07:18 CDT 2016 for crop 16r.
%
% The most recent plan data are derived from ../demeter/data/plan.pl for the 15r.  These
% are substituted into the packing_plan.pl data for 15r to generate
% packing_plan/10 facts that are in the previous sequence, but not numbered.
%
% Wait until all packing_plan/10 facts are written, and in the correct sequence,
% before re-running the script to insert the sequence numbers for planting!




* general remarks


** background <2016-05-20 Fri> 					       :toni:

The general plan is to have a small field since we have a lot to do, both
for work and fun in the field; a lot to do in the lab; and lots of
manuscripts and proposals to write.




** goals <2016-05-20 Fri> :toni:


Goals are:
   + capture imagery for drone algorithm development
      + asymmetric targets, placed asymmetrically
      + thermal targets
      + tethered flight, no COA yet
      + regular and thermal gopros
      + go up to iowa and image their fields???? probably not
      + perpendicular and oblique angles
      + along and across rows
      + les8, les7, les23
      + doubled haploids from Candi

   + instrumentation development and experimentation
   + further back-cross peter's lines
   + try to unstick stuck pedigrees with row shading; les5, les15, les20
   + push along branches that are close to finishing
   + stay in the lab and process data!
   + 80 rows max



   + plant jimmy's corn offspring and look to cross in nice lesion mutants?

   + PHOTOGRAPH BEFORE POLLINATIONS!

   + finish mutant data collection before pollinations



** weather

#+begin_rmk soil still too cold and wet <2016-05-20 Fri> :toni:
Soil starting to stay warm, but nadir at 2" on <2016-05-19 Thu> was 48.7
degree F.  0.52" rain since the 10th.
#+end_rmk


** strategy abd tables



#+tblname: planning
| type             | num rows | modified |
|------------------+----------+----------|
| elite            |        5 |        5 |
| double haploid   |        5 |        5 |
| selves           |      3.5 |      3.5 |
| Les15            |       20 |        0 |
| lls1*            |        6 |        0 |
| other recess     |     29.5 |     11.5 |
| bulks for flying |       12 |       13 |
| dominants        |     29.5 |     27.5 |
| miscellany       |     15.5 |        0 |
| total non-inbred |     197. |     65.5 |
| inbred           |          |       25 |
| total rows       |          |     90.5 |
#+TBLFM: @11$3=vsum(@2..@10)::@13$3=vsum(@11..@12)










M14 compensatn rate =  1.6560510 from 15r

66 1st
45 2nd
0 3rd

#+NAME:inbreds
|                                           |      S |      W |     M |    B | total rows by plntg |
|-------------------------------------------+--------+--------+-------+------+---------------------|
| over-planting factors                     |    1.3 |    1.3 |   1.7 |  1.3 |                 0.5 |
|-------------------------------------------+--------+--------+-------+------+---------------------|
| 1st plntg lines                           |     11 |     11 |    21 |    8 |                     |
| 2nd plntg lines                           |      7 |     13 |    12 |    8 |                     |
|-------------------------------------------+--------+--------+-------+------+---------------------|
| 1st plntg ears                            |     33 |     33 |    63 |   24 |                     |
| 2nd plntg ears                            |     21 |     39 |    36 |   24 |                     |
|-------------------------------------------+--------+--------+-------+------+---------------------|
| 1st plntg rows, inc losses                |  2.145 |  2.145 | 5.355 | 1.56 |              11.205 |
| 2nd plntg rows, inc losses                |  1.365 |  2.535 |  3.06 | 1.56 |                8.52 |
| true 1st plntg rows + some 2nd plntg rows | 2.8275 | 3.4125 | 6.885 | 2.34 |              15.465 |
| actual 3rd plntg rows                     |      0 |      0 |     0 |    0 |                   0 |
| rows by inbreds, all plantings            | 4.1925 | 5.9475 | 9.945 |  3.9 |                     |
|-------------------------------------------+--------+--------+-------+------+---------------------|
| rounded 1st plntg rows                    |      3 |      3 |     7 |    2 |                  15 |
| rounded 2nd plntg rows                    |      2 |      3 |     3 |    2 |                  10 |
| rounded 3rd plntg rows                    |      0 |      0 |     0 |    0 |                   0 |
| total rounded rows                        |      5 |      6 |    10 |    4 |                  25 |
|                                           |        |        |       |      |                     |
#+TBLFM: @5$2=@-2*3::@5$3=@-2*3::@5$4=@-2*3::@5$5=@-2*3::@6$2=@-2*3::@6$3=@-2*3::@6$4=@-2*3::@6$5=@-2*3::@7$2=(@-2/20)*@-5::@7$3=(@-2/20)*@-5::@7$4=(@-2/20)*@-5::@7$5=(@-2/20)*@-5::@8$2=(@-2/20)*@-6::@8$3=(@-2/20)*@-6::@8$4=(@-2/20)*@-6::@8$5=(@-2/20)*@-6::@8$6=vsum($2..$5)::@9$2=@-2+(@-1*@2$6)::@9$3=@-2+(@-1*@2$6)::@9$4=@-2+(@-1*@2$6)::@9$5=@-2+(@-1*@2$6)::@9$6=vsum($2..$5)::@10$6=vsum($2..$5)::@11$2=vsum(@8..@10)::@11$3=vsum(@8..@10)::@11$4=vsum(@8..@10)::@11$5=vsum(@8..@10)::@12$2=round(@-3)::@12$3=round(@-3)::@12$4=round(@-3)::@12$5=round(@-3)::@12$6=vsum($2..$5)::@13$2=round(@-5)+1::@13$3=round(@-5)::@13$4=round(@-5)::@13$5=round(@-5)::@13$6=vsum($2..$5)::@14$2=round(@-4)::@14$3=round(@-4)::@14$4=round(@-4)::@14$5=round(@-4)::@14$6=vsum($2..$5)::@15$2=vsum(@12..@14)::@15$3=vsum(@12..@14)::@15$4=vsum(@12..@14)::@15$5=vsum(@12..@14)::@15$6=vsum($2..$5)


#+NAME:rows
|----------------------------------------+-------|
| full rows elite/doubled haploids       |    10 |
| half rows mutants                      |   111 |
| full rows inbreds                      |    25 |
| total stakes                           |   146 |
| total physical rows                    |  90.5 |
| gerry's rows                           |    20 |
| total rows needed, exclusive of border | 110.5 |
|                                        |       |
#+TBLFM: @1$2=10::@3$2=remote(inbreds,@15$6)::@4$2=@1 + @2 + @3::@5$2=@1 + @3 + @2/2::@7$2=@5+@6





* DONE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% elite line %%%%%%%%%%%%%%%%%%%%%%%%%%%%%

#+begin_src prolog  :tangle yes



packing_plan(1,1,['elite'],1,[fly],'','','16R',60,20).

packing_plan(2,1,['elite'],1,[fly],'','','16R',60,20).

packing_plan(3,1,['elite'],1,[fly],'','','16R',60,20).

packing_plan(4,1,['elite'],1,[fly],'','','16R',60,20).

packing_plan(5,1,['elite'],1,[fly],'','','16R',60,20).


#+end_src


* DONE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% doubled haploids %%%%%%%%%%%%%%%%%%%%%%%%%%%%%

#+begin_src prolog  :tangle yes



packing_plan(6,1,['gardner dh'],1,[fly],'','','16R',20,20).

packing_plan(7,1,['gardner dh'],1,[fly],'','','16R',20,20).

packing_plan(8,1,['gardner dh'],1,[fly],'','','16R',20,20).

packing_plan(9,1,['gardner dh'],1,[fly],'','','16R',20,20).

packing_plan(10,1,['gardner dh'],1,[fly],'','','16R',20,20).


#+end_src


* DONE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% inbreds %%%%%%%%%%%%%%%%%%%%%%%%%

** DONE 1st planting



#+begin_src prolog :tangle yes

packing_plan(11,1,['09R201:S0xxxxxx x 09R201:S0xxxxxx'],1,[inbred],'','','16R',20,20).

packing_plan(12,1,['09R201:S0xxxxxx x 09R201:S0xxxxxx'],1,[inbred],'','','16R',20,20).

packing_plan(13,1,['09R201:S0xxxxxx x 09R201:S0xxxxxx'],1,[inbred],'','','16R',20,20).





packing_plan(14,1,['09R301:W0xxxxxx x 09R301:W0xxxxxx'],1,[inbred],'','','16R',20,20).

packing_plan(15,1,['09R301:W0xxxxxx x 09R301:W0xxxxxx'],1,[inbred],'','','16R',20,20).

packing_plan(16,1,['09R301:W0xxxxxx x 09R301:W0xxxxxx'],1,[inbred],'','','16R',20,20).




packing_plan(17,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],1,[inbred],'','','16R',20,20).

packing_plan(18,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],1,[inbred],'','','16R',20,20).

packing_plan(19,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],1,[inbred],'','','16R',20,20).

packing_plan(20,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],1,[inbred],'','','16R',20,20).

packing_plan(21,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],1,[inbred],'','','16R',20,20).

packing_plan(22,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],1,[inbred],'','','16R',20,20).

packing_plan(23,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],1,[inbred],'','','16R',20,20).






packing_plan(24,1,['13R504:B0xxxxxx x 13R504:B0xxxxxx'],1,[inbred],'','','16R',20,20).

packing_plan(25,1,['13R504:B0xxxxxx x 13R504:B0xxxxxx'],1,[inbred],'','','16R',20,20).




#+end_src

   
** DONE 2nd planting 




#+begin_src prolog :tangle yes

packing_plan(26,1,['09R201:S0xxxxxx x 09R201:S0xxxxxx'],2,[inbred],'','','16R',20,20).

packing_plan(27,1,['09R201:S0xxxxxx x 09R201:S0xxxxxx'],2,[inbred],'','','16R',20,20).





packing_plan(28,1,['09R301:W0xxxxxx x 09R301:W0xxxxxx'],2,[inbred],'','','16R',20,20).

packing_plan(29,1,['09R301:W0xxxxxx x 09R301:W0xxxxxx'],2,[inbred],'','','16R',20,20).

packing_plan(30,1,['09R301:W0xxxxxx x 09R301:W0xxxxxx'],2,[inbred],'','','16R',20,20).




packing_plan(31,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],2,[inbred],'','','16R',20,20).

packing_plan(32,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],2,[inbred],'','','16R',20,20).

packing_plan(33,1,['09R401:M0xxxxxx x 09R401:M0xxxxxx'],2,[inbred],'','','16R',20,20).




packing_plan(34,1,['13R504:B0xxxxxx x 13R504:B0xxxxxx'],2,[inbred],'','','16R',20,20).

packing_plan(35,1,['13R504:B0xxxxxx x 13R504:B0xxxxxx'],2,[inbred],'','','16R',20,20).


#+end_src






* DONE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  mutants %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



** DONE %%%%%%%%%%%%%% 3.5 rows selves %%%%%%%%%%%%%%%%%%%

+ 1st planting as usual; these are fairly far along, so may not be
  completely fast.

*** DONE lls1  1 half-row

#+begin_src prolog  :tangle yes
packing_plan(36,1,['12N205:S0041906 x 12N3738:0000804'],1,[self],'is 3rd; alternate for forebear of family 4057','K1702','16R',15,10).

#+end_src


*** DONE lls1 121D K3402  2 half-rows



#+begin_src prolog :tangle yes

packing_plan(37,1,['15R305:W0003009 x 15R4331:0004904'],1,[self],'is 3rd','K3402','16R',15,10).


packing_plan(38,1,['15R405:M0003904 x 15R3877:0005004'],1,[self],'is 2nd','K3402','16R',15,10).


#+end_src


*** DONE lls1121D K5302   2 half-rows


#+begin_src prolog :tangle yes
packing_plan(39,1,['15R305:W0002701 x 15R4211:0005516'],1,[self],'is 3rd','K5302','16R',15,10).


packing_plan(40,1,['15R405:M0003710 x 15R4213:0005618'],1,[self],'is 3rd','K5302','16R',15,10).


#+end_src







*** DONE les23   2 half-rows


#+begin_src prolog :tangle yes
packing_plan(41,1,['15R205:S0000501 x 15R4231:0009207'],1,[self],'is 3rd','K1802','16R',15,10).


packing_plan(42,1,['15R205:S0002605 x 15R4247:0009302'],1,[self],'is 3rd; check sex organs; 15r had excellent tassel and no ear','K16306','16R',15,10).




#+end_src





** DONE %%%%%%%%%%%%%%%%%%%%%% 11.5 rows recessives %%%%%%%%%%%%%%%%%%%%%%

*** DONE les23 11 half-rows

#+begin_src prolog :tangle yes


packing_plan(43,1,['15R4339:0006503 x 15R4339:0006503'],1,[check,'W'],'is 5th selfed','K1802','16R',15,10).

packing_plan(44,1,['15R4340:0006601 x 15R4340:0006601'],1,[check,'M'],'is 4th selfed','K1802','16R',15,10).



packing_plan(45,1,['15R4370:0006703 x 15R4370:0006703'],1,[check,'S'],'is 3rd selfed','K1804','16R',15,10).

packing_plan(46,1,['15R4341:0006805 x 15R4341:0006805'],1,[check,'W'],'is 4th selfed','K1804','16R',15,10).

packing_plan(47,1,['15R4371:0006904 x 15R4371:0006904'],1,[check,'M'],'is 3rd selfed','K1804','16R',15,10).




packing_plan(48,1,['15R4342:0007002 x 15R4342:0007002'],1,[check,'S'],'is 3rd selfed','K3514','16R',15,10).

packing_plan(49,1,['15R4343:0007101 x 15R4343:0007101'],1,[check,'W'],'is 4th selfed','K3514','16R',15,10).

packing_plan(50,1,['15R4372:0007201 x 15R4372:0007201'],1,[check,'M'],'is 3rd selfed','K3514','16R',15,10).




packing_plan(51,1,['15R4344:0007301 x 15R4344:0007301'],1,[check,'W'],'is 3rd selfed','K16306','16R',15,10).

packing_plan(52,1,['15R4373:0007403 x 15R4373:0007403'],1,[check,'M'],'is 3rd selfed','K16306','16R',15,10).

packing_plan(53,1,['15R305:W0000908 x 15R4373:0007409'],1,[check,'S','W','M'],'dominant mutant in row? contaminant?','K16306','16R',15,10).




#+end_src








*** DONE les3  6 half-rows


% may like cooler weather, lots of light, very late developping, must cross
% blindly, favored lower leaves in 12r.  Phenotype variable, from small
% necroses to brown necroses on midrib to yellow-green splotchies on lower
% or upper leaves.  Functionally recessive, possibly malleable phenotype.
%
% In 12n, a strong necrotic phenotype developed well before flowering.


#+begin_src prolog :tangle yes


packing_plan(54,1,['15R4374:0007503 x 15R4374:0007503'],2,[check,'S'],'is 2nd selfed; late developping phenotype; yellow-green splotchies, earlier in the process of lesion formation; very different from K11903; favored lower leaves in 12r; cross all plants blindly; may be functionally recessive; excellent light-brown necrotic lesion phenotype 8.1 in 12n, well before flowering; evidence of small, slight oscillations','K11906','16R',15,10).

packing_plan(55,1,['15R4345:0007602 x 15R4345:0007602'],2,[check,'S'],'is 2nd selfed; late developping phenotype; yellow-green splotchies, earlier in the process of lesion formation; very different from K11903; favored lower leaves in 12r; cross all plants blindly; may be functionally recessive; excellent light-brown necrotic lesion phenotype 8.1 in 12n, well before flowering; evidence of small, slight oscillations','K11906','16R',15,10).


packing_plan(56,1,['15R4375:0007701 x 15R4375:0007701'],2,[check,'W'],'is 2nd selfed; late developping phenotype; yellow-green splotchies, earlier in the process of lesion formation; very different from K11903; favored lower leaves in 12r; cross all plants blindly; may be functionally recessive; excellent light-brown necrotic lesion phenotype 8.1 in 12n, well before flowering; evidence of small, slight oscillations','K11906','16R',15,10).

packing_plan(57,1,['15R4346:0007801 x 15R4346:0007801'],2,[check,'W'],'is 2nd selfed; late developping phenotype; yellow-green splotchies, earlier in the process of lesion formation; very different from K11903; favored lower leaves in 12r; cross all plants blindly; may be functionally recessive; excellent light-brown necrotic lesion phenotype 8.1 in 12n, well before flowering; evidence of small, slight oscillations','K11906','16R',15,10).


packing_plan(58,1,['15R4376:0007903 x 15R4376:0007903'],2,[check,'M'],'is 2nd selfed; late developping phenotype; yellow-green splotchies, earlier in the process of lesion formation; very different from K11903; favored lower leaves in 12r; cross all plants blindly; may be functionally recessive; excellent light-brown necrotic lesion phenotype 8.1 in 12n, well before flowering; evidence of small, slight oscillations','K11906','16R',15,10).

packing_plan(59,1,['15R4377:0008008 x 15R4377:0008008'],2,[check,'M'],'is 2nd selfed; late developping phenotype; yellow-green splotchies, earlier in the process of lesion formation; very different from K11903; favored lower leaves in 12r; cross all plants blindly; may be functionally recessive; excellent light-brown necrotic lesion phenotype 8.1 in 12n, well before flowering; evidence of small, slight oscillations','K11906','16R',15,10).


#+end_src












*** DONE les5 6 half-rows


#+begin_src prolog :tangle yes

packing_plan(60,1,['15R205:S0002207 x 15R0685:0009103'],2,[self,'S'],'is 1st; should be recessive; be ready to bc if not','K68503','16R',15,10).

packing_plan(61,1,['15R305:W0003209 x 15R0685:0009103'],2,[self,'W'],'is 1st; should be recessive; be ready to bc if not','K68503','16R',15,10).

packing_plan(62,1,['15R405:M0003505 x 15R0685:0009103'],2,[self,'M'],'is 1st; should be recessive; be ready to bc if not','K68503','16R',15,10).



packing_plan(63,1,['15R205:S0002205 x 15R0685:0009107'],2,[self,'S'],'is 1st; should be recessive; be ready to bc if not','K68507','16R',15,10).

packing_plan(64,1,['15R305:W0003115 x 15R0685:0009107'],2,[self,'W'],'is 1st; should be recessive; be ready to bc if not','K68507','16R',15,10).

packing_plan(65,1,['15R405:M0003507 x 15R0685:0009107'],2,[self,'M'],'is 1st; should be recessive; be ready to bc if not','K68507','16R',15,10).




#+end_src














** DONE %%%%%%%%%%%%%%%%%%%% 13 rows bulks for flying %%%%%%%%%%%%%

*** DONE Les4   18 half-rows

+ M14, K0302 doubles available; otherwise done for now

+ W23, K0303 done

+ Mo20W, K2106 done

#+begin_src prolog :tangle yes

packing_plan(66,1,['13R205:S0002205 x 13R4082:0005502'],1,[inc,self,'B'],'is 6th!; additional bulking good','K0302','16R',15,10).

packing_plan(67,1,['13R205:S0002205 x 13R4082:0005502'],2,[inc,self,'B'],'is 6th!; additional bulking good','K0302','16R',15,10).


packing_plan(68,1,['13R305:W0000702 x 13R4083:0005603'],1,[inc,self],'is 6th!; check osc; forbear male had great phenotype, smaller lesions on lower leaves than Mo20W on 9.1 in 12n; sheath lesions were more diagnostic','K0302','16R',15,10).

packing_plan(69,1,['13R305:W0000702 x 13R4083:0005603'],2,[inc,self],'is 6th!; check osc; forbear male had great phenotype, smaller lesions on lower leaves than Mo20W on 9.1 in 12n; sheath lesions were more diagnostic','K0302','16R',15,10).




packing_plan(70,1,['14R205:S0000215 x 14R4229:0009701'],1,[inc,self,'B'],'is 6th!','K0303','16R',15,10).

packing_plan(71,1,['14R205:S0000215 x 14R4229:0009701'],2,[inc,self,'B'],'is 6th!','K0303','16R',15,10).


packing_plan(72,1,['12R405:M0000310 x 12R3587:0023110'],1,[inc,self],'is 6th!; phenotype 9.1 in 12n','K0303','16R',15,10).

packing_plan(73,1,['12R405:M0000310 x 12R3587:0023110'],2,[inc,self],'is 6th!; phenotype 9.1 in 12n','K0303','16R',15,10).




packing_plan(74,1,['12N205:S0036705 x 12N3948:0017506'],1,[inc,self,'B'],'is 6th!; check osc; male had good phenotype 9.1 in 12n','K2101','16R',15,10).

packing_plan(75,1,['12N205:S0036705 x 12N3948:0017506'],2,[inc,self,'B'],'is 6th!; check osc; male had good phenotype 9.1 in 12n','K2101','16R',15,10).


packing_plan(76,1,['12N305:W0038310 x 12N3949:0017706'],1,[inc,self],'is 6th!; in 12n, male had weak phenotype 9.1, better by 13.1, but good phenotype by 15.1','K2101','16R',15,10).

packing_plan(77,1,['12N305:W0038310 x 12N3949:0017706'],2,[inc,self],'is 6th!; in 12n, male had weak phenotype 9.1, better by 13.1, but good phenotype by 15.1','K2101','16R',15,10).


packing_plan(78,1,['11N405:M0032808 x 11N3419:0010704'],1,[self,inc],'is 6th!; addtnl bulking good; check osc; male had good phenotype 9.1 in 12n','K2101','16R',15,10).

packing_plan(79,1,['11N405:M0032808 x 11N3419:0010704'],2,[self,inc],'is 6th!; addtnl bulking good; check osc; male had good phenotype 9.1 in 12n','K2101','16R',15,10).



packing_plan(80,1,['15R305:W0000711 x 15R4352:0010904'],1,[inc,self,'B'],'is 6th','K2106','16R',15,10).

packing_plan(81,1,['15R305:W0000711 x 15R4352:0010904'],2,[inc,self,'B'],'is 6th','K2106','16R',15,10).


packing_plan(82,1,['15R405:M0001101 x 15R4353:0011002'],1,[inc,self,'B'],'is 6th','K2106','16R',15,10).

packing_plan(83,1,['15R405:M0001101 x 15R4353:0011002'],2,[inc,self,'B'],'is 6th','K2106','16R',15,10).


#+end_src
















*** DONE Les8    8 half-rows

+ Mo20W, K0604 done

+ W23, K0604 done; doubles available


#+begin_src prolog :tangle yes

packing_plan(84,1,['14R405:M0001105 x 14R4283:0021405'],1,[inc,self,'B'],'is 6th!; may be fast','K0604','16R',15,10).

packing_plan(85,1,['14R405:M0001105 x 14R4283:0021405'],2,[inc,self,'B'],'is 6th!; may be fast','K0604','16R',15,10).



packing_plan(86,1,['14R205:S0000105 x 14R4284:0021512'],1,[inc,self,'B'],'is 6th!','K2405','16R',15,10).

packing_plan(87,1,['14R205:S0000105 x 14R4284:0021512'],2,[inc,self,'B'],'is 6th!','K2405','16R',15,10).


packing_plan(88,1,['12N305:W0039207 x 12N3614:0024110'],1,[inc,self],'is 6th!; poor yield on 13r selves','K2405','16R',15,10).

packing_plan(89,1,['12N305:W0039207 x 12N3614:0024110'],2,[inc,self],'is 6th!; poor yield on 13r selves','K2405','16R',15,10).



packing_plan(90,1,['14R405:M0001103 x 14R4285:0021603'],1,[inc,self,'B'],'is 6th!','K2405','16R',15,10).

packing_plan(91,1,['14R405:M0001103 x 14R4285:0021603'],2,[inc,self,'B'],'is 6th!','K2405','16R',15,10).



#+end_src



	     







** DONE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 27.5 rows  primary and secondary dominants %%%%%%%%%%%%%%%%%%%%%%%%%

These guys are either very early or very late in bcs.




*** DONE Les1  1 half-row

+ abandoned K0104 for now

#+begin_src prolog :tangle yes

packing_plan(92,1,['15R405:M0001411 x 15R4384:0009402'],2,['M'],'is 2nd; branch rebuild','K0106','16R',15,10).



#+end_src





*** DONE Les2  4 half-rows

#+begin_src prolog :tangle yes
packing_plan(93,1,['14R305:W0000704 x 14R4220:0006819'],1,['W'],'is 4th; repeat of 15r','K0202','16R',15,10).

packing_plan(94,1,['13R405:M0002608 x 13R4076:0004202'],1,['M'],'is 5th; repeat of 15r','K0202','16R',15,10).



packing_plan(95,1,['15R305:W0000906 x 15R4351:0010005'],2,['W'],'is 2nd; branch rebuild','K0207','16R',15,10).

packing_plan(96,1,['15R305:W0002901 x 15R4389:0010801'],2,['W'],'is 2nd; branch rebuild; later phe in 15r','K0207','16R',15,10).



#+end_src


*** DONE Les2-N845A  3 half-rows

#+begin_src prolog :tangle yes


packing_plan(97,1,['13R405:M0002601 x 13R4148:0019102'],1,['M'],'is 5th; repeat 15r','K5515','16R',15,10).



packing_plan(98,1,['14R205:S0000607 x 14R4275:0020306'],1,['S'],'is 4th','K5525','16R',15,10).


packing_plan(99,1,['14R305:W0000808 x 14R3937:0020415'],2,['W'],'is 2nd; may be chlorotic; one mutant in 15r','K5525','16R',15,10).


#+end_src



*** DONE Les6  1 half-row

#+begin_src prolog :tangle yes



packing_plan(100,1,['14R405:M0001101 x 14R4278:0020905'],1,['M'],'is 5th; repeat of 15r','K2212','16R',15,10).

#+end_src



*** DONE Les7  6 half-rows

+ Mo20W, K0509 done for now

+ M14, K0509 doubles available; otherwise done for now

+ W23, K0509 appears stalled

#+begin_src prolog :tangle yes


packing_plan(101,1,['10R305:W0001502 x 10R1035:0021906'],1,['W'],'is 3rd; no phe 15r; ancestor of 13R305:W0000803; stalled branch?; pick one of two','K0509','16R',15,10).

packing_plan(102,1,['10R305:W0001511 x 10R1035:0021903'],1,['W'],'is 3rd; no phe 15r; alternate for 11N305:W0039501; stalled branch?; pick one of two','K0509','16R',15,10).

packing_plan(103,1,['11N305:W0039501 x 11N3192:0013810'],1,['W'],'is 4th; no phe 15r; forebear of 13R305:W000080; stalled branch?; pick one of two','K0509','16R',15,10).

packing_plan(104,1,['11N305:W0030810 x 11N3192:0013803'],1,['W'],'is 4th; no phe 15r; alternate for 11N305:W0039501; stalled branch?; pick one of two','K0509','16R',15,10).

packing_plan(105,1,['13R305:W0000803 x 13R3974:0021303'],1,['W'],'is 5th; no phe 15r; crummy tassels in 14r; repeat; stalled branch?','K0509','16R',15,10).



packing_plan(106,1,['14R205:S0000109 x 14R4280:0021111'],1,['S'],'is 5th; no phe 15r','K2312','16R',15,10).


#+end_src














*** DONE Les9  2 half-rows


+ Mo20W, K0707 small ears

+ W23, K0707 self problematic

+ still a fair amount of 11N205:S0036710, so going with that.


#+begin_src prolog :tangle yes


packing_plan(107,1,['15R205:S0000401 x 15R4391:0012707'],1,['S'],'is 5th','K2506','16R',15,10).


packing_plan(108,1,['14R405:M0001308 x 14R4286:0021905'],1,['M'],'is 4th; repeat 15r; poor germination in 15r; overplant?','K2506','16R',15,10).

#+end_src



*** DONE Les10 3 half-rows


+ M14, K0801 consistently had crappy tassels and no ears in 2nd; 1st low; rebuild from S

+ chronic ear issues in K2606


#+begin_src prolog :tangle yes

packing_plan(109,1,['15R205:S0002501 x 15R4395:0013304'],1,['S'],'is 4th; fast; forebear had no ears in 12r; male parent had bad tassel in 14r','K2606','16R',15,10).


packing_plan(110,1,['12R405:M0001501 x 12R3451:0028009'],2,['M'],'is 2nd; may be fast; alternate branch for 15R405:M0003909','K2606','16R',15,10).

packing_plan(111,1,['15R405:M0003909 x 15R4398:0013904'],1,['M'],'is 3rd; may be fast; tassel looked sterile in 15r, but this is the progeny','K2606','16R',15,10).

#+end_src



*** DONE Les11   3 half-rows

#+begin_src prolog :tangle yes


packing_plan(112,1,['14R405:M0001304 x 14R4162:0022908'],1,['M'],'is 5th; repeat 15r; pick one of three','K0901','16R',15,10).

packing_plan(113,1,['14R405:M0003903 x 14R4162:0022908'],1,['M'],'is 5th; alternate for 14R405:M0001304; pick one of three','K0901','16R',15,10).

packing_plan(114,1,['14R405:M0003906 x 14R4162:0022908'],1,['M'],'is 5th; alternate for 14R405:M0001304; pick one of three','K0901','16R',15,10).

#+end_src




*** DONE Les12  3 half-rows

+ Mo20W, K1001 stalled
+ Mo20W, K2711 may be stalled

#+begin_src prolog :tangle yes


packing_plan(115,1,['11N205:S0034309 x 11N3189:0016803'],1,['S'],'is 3rd; repeat 15r; clear phe 15r; alternate branch for 12R205:S0002216; given metabolic effects, cut out most wild-types','K1001','16R',15,10).

packing_plan(116,1,['12R205:S0002216 x 12R3629:0028403'],1,['S'],'is 4th; repeat of 13r, 14r, 15r; clear phe 15r; a few ok tassels in 14r; check osc; missed in 12n; phenotype poor; given metabolic effects, cut out most wild-types','K1001','16R',15,10).




packing_plan(117,1,['12R205:S0002217 x 12R3454:0028708'],1,['S'],'is 3rd; repeat of 13r, 14r, 15r; good ears and tassels on some plants in 14r; modifier jump in 12n; given metabolic effects, cut out most wild-types','K2711','16R',15,10).

#+end_src





*** DONE Les13  3 half-rows

#+begin_src prolog :tangle yes


packing_plan(118,1,['15R305:W0003003 x 15R4402:0015101'],1,['W'],'is 3rd','K1109','16R',15,10).


packing_plan(119,1,['14R405:M0001803 x 14R4166:0023701'],1,['M'],'is 5th; looked like W23 in 15r; repeat 15r','K1109','16R',15,10).




packing_plan(120,1,['15R405:M0001619 x 15R1715:0015202'],2,['M'],'is 2nd','K2805','16R',15,10).


#+end_src






*** DONE Les17   4 half-rows


+ the more lesions and the more rapid the lesion development, the poorer
  the ears, up to no ears 


#+begin_src prolog :tangle yes


packing_plan(121,1,['12R405:M0011105 x 12R3242:0030209'],1,['M'],'is 5th; repeat 15r; many plants had ok tassels and small ears in 14r','K3007','16R',15,10).

packing_plan(122,1,['12R405:M0009910 x 12R3242:0030202'],1,['M'],'is 5th; alternate for 12R405:M0011105','K3007','16R',15,10).

packing_plan(123,1,['12R405:M0010820 x 12R3242:0030209'],1,['M'],'is 5th; alternate for 12R405:M0011105','K3007','16R',15,10).

packing_plan(124,1,['12R405:M0011110 x 12R3242:0030203'],1,['M'],'is 5th; alternate for 12R405:M0011105','K3007','16R',15,10).


#+end_src





*** DONE Les18   2 half-rows

+ M14, K1411 has a lot of crummy tassel

#+begin_src prolog :tangle yes



packing_plan(125,1,['12R405:M0008203 x 12R3645:0030503'],1,['M'],'is 4th; repeat 15r; alternate branch to 12ns; tendency to crummy tassel','K1411','16R',15,10).

packing_plan(126,1,['12N405:M0038707 x 12N4030:0030504'],1,['M'],'is 5th; repeat 15r; tendency to crummy tassel','K1411','16R',15,10).



#+end_src


	     


*** DONE Les19   1 half-row

#+begin_src prolog :tangle yes

packing_plan(127,1,['15R405:M0001310 x 15R4401:0014902'],1,['M'],'is 5th','K3206','16R',15,10).



#+end_src








*** DONE Les20-N2457  14 half-rows


+ a mess; kernel counts often low, good phenotype but no tassels

+ steps not planted out have cl < 50

+ do in Hawai'i?; but let's see how the 15r corn works out


#+begin_src prolog :tangle yes

packing_plan(128,1,['15R205:S0002505 x 15R0686:0015302'],2,['S'],'is 1st; recreated from martys; alternate','K68602','16R',15,10).

packing_plan(129,1,['15R305:W0002805 x 15R0686:0015302'],2,['W'],'is 1st; recreated from martys; alternate','K68602','16R',15,10).

packing_plan(130,1,['15R405:M0003411 x 15R0686:0015302'],2,['M'],'is 1st; recreated from martys; alternate','K68602','16R',15,10).



packing_plan(131,1,['15R205:S0002411 x 15R0686:0015307'],2,['S'],'is 1st; recreated from martys','K68607','16R',15,10).

packing_plan(132,1,['15R305:W0003106 x 15R0686:0015307'],2,['W'],'is 1st; recreated from martys','K68607','16R',15,10).

packing_plan(133,1,['15R405:M0001601 x 15R0686:0015307'],2,['M'],'is 1st; recreated from martys','K68607','16R',15,10).







packing_plan(134,1,['15R205:S0002306 x 15R4403:0015507'],2,['S'],'is 3rd','K7110','16R',15,10).



packing_plan(135,1,['15R305:W0003004 x 15R2930:0015905'],2,['W'],'is 2nd','K7110','16R',15,10).

packing_plan(136,1,['15R305:W0003013 x 15R4044:0016008'],2,['W'],'is 2nd; alternate for 15R2930:0015905','K7110','16R',15,10).

packing_plan(137,1,['15R305:W0002903 x 15R4177:0016107'],2,['W'],'is 3rd','K7110','16R',15,10).

packing_plan(138,1,['15R305:W0002904 x 15R3654:0016401'],2,['W'],'is 5th','K7110','16R',15,10).



packing_plan(139,1,['15R405:M0003701 x 15R1129:0015401'],2,['M'],'is 2nd','K7110','16R',15,10).

packing_plan(140,1,['15R405:M0003307 x 15R2931:0016704'],2,['M'],'is 3rd','K7110','16R',15,10).

packing_plan(141,1,['15R405:M0003804 x 15R4406:0016801'],2,['M'],'is 4th','K7110','16R',15,10).





#+end_src




*** DONE Les21    1 half-row

#+begin_src prolog :tangle yes


packing_plan(142,1,['14R405:M0001610 x 14R4048:0026106'],1,['M'],'is 4th; repeat 15r; check osc; stems may be brittle','K3311','16R',15,10).




#+end_src







*** DONE Les21-N1442   3 half-row

#+begin_src prolog :tangle yes

packing_plan(143,1,['15R205:S0000101 x 15R4183:0017105'],1,['S'],'is 5th','K7205','16R',15,10).



packing_plan(144,1,['15R305:W0000701 x 15R4363:0017408'],1,[check],'is 6th!','K7205','16R',15,10).

packing_plan(145,1,['15R305:W0000704 x 15R4363:0017408'],1,[check],'is 6th!','K7205','16R',15,10).



#+end_src




















*** DONE Les*-mi1    1 half-row

#+begin_src prolog :tangle yes

packing_plan(146,1,['15R205:S0000510 x 15R4412:0018104'],1,['S'],'is 5th','K12205','16R',15,10).





#+end_src






















* TODO %%%%%%%%%%%%%%%%%%%%%%%%%%%%% demo corn %%%%%%%%%%%%%%%%%%%%%%%%




Field xx, 17' rows


Strong lesions, plant late

#+begin_src prolog :tangle no





#+end_src


* TODO %%%%%%%%%%%%%%%%%%%%%%%%%%%% postponed until 17r %%%%%%%%%%%%%%%%%%%%%%%

** fragiles


*** TODO Les15-N2007 20 rows

+ these were packed but not planted in 15r; probably packed 30/packet each,
  but check

+ S, M branches very stalled

+ need a third planting of inbreds to catch these slowpokes!

+ also reach back in the Mo20W and M14 pedigrees; plant the whole tree,
  essentially, and attempt rebuilds from the W23 branch

+ overplant if sufficient inventory

+ provide wind and sun protection

+ skipped nodes had low cl

+ otherwise, inventories good (<2015-05-13 Wed>); one line at 1/16th ear, though

#+begin_src prolog :tangle no

packing_plan(147,1,['09R201:S0040305 x 09R1416:0025907'],1,['S'],'is 1st; alternate for 09R201:S0056209; low cl;  stalled; very slow, dwarf; use partial shade; repeat; low cl','K6711','16R',30,20).

packing_plan(148,1,['09R201:S0056212 x 09R1416:0025906'],1,['S'],'is 1st; alternate for 09R201:S0056209; forebear of 10R205:S0000809;  stalled; very slow, dwarf; use partial shade; repeat; low cl','K6711','16R',30,20).

packing_plan(149,1,['10R205:S0000809 x 10R2251:0031606'],1,['S'],'is 2nd; very slow, dwarf; use partial shade','K6711','16R',30,20).

packing_plan(150,1,['09R201:S0056209 x 09R1416:0025907'],1,['S'],'is 1st; forebear of 10R205:S0002302; stalled; very slow, dwarf; use partial shade; repeat','K6711','16R',30,20).

packing_plan(151,1,['10R205:S0002303 x 10R2252:0031708'],1,['S'],'is 2nd; alternate for 10R205:S0002302; stalled; very slow, dwarf; use partial shade','K6711','16R',30,20).

packing_plan(152,1,['10R205:S0002302 x 10R2252:0031702'],1,['S'],'is 2nd; forebear of 12R205:S0009109; stalled; very slow, dwarf; use partial shade; repeat; low cl','K6711','16R',30,20).

packing_plan(153,1,['12R205:S0009109 x 12R3270:0014314'],1,['S'],'is 3rd; stalled; very slow, dwarf; use partial shade; repeat','K6711','16R',30,20).

packing_plan(154,1,['12R205:S0008815 x 12R3270:0014314'],1,['S'],'is 3rd; alternate for 12R205:S0009109; stalled; very slow, dwarf; use partial shade','K6711','16R',30,20).



packing_plan(155,1,['10R305:W0010502 x 10R2254:0032002'],1,['W'],'is 1st; forebear of 12R305:W0011614;  very slow, dwarf; low cl; use partial shade','K6711','16R',30,20).

packing_plan(156,1,['12R305:W0011614 x 12R3456:0014501'],1,['W'],'is 3rd; forebear of 12N305:W0042006 and 12N305:W0042007;  very slow, dwarf; low cl; use partial shade','K6711','16R',30,20).

packing_plan(157,1,['12R305:W0009213 x 12R3456:0014504'],1,['W'],'is 3rd; alternate for 12R305:W0011614;  very slow, dwarf; low cl; use partial shade','K6711','16R',30,20).

packing_plan(158,1,['12N305:W0042006 x 12N4053:0000301'],1,['W','S','M'],'is 4th; forebear of 14R305:W0000705;  very slow, dwarf; low cl; use partial shade','K6711','16R',30,20).

packing_plan(159,1,['12N305:W0042007 x 12N4053:0000301'],1,['W'],'is 4th; alternate for 12N305:W0042006;  very slow, dwarf; low cl; use partial shade','K6711','16R',30,20).

packing_plan(160,1,['14R305:W0000705 x 14R4137:0004215'],1,['W','S','M'],'is 5th; offspring of tall plant; use partial shade?','K6711','16R',30,20).


packing_plan(161,1,['09R401:M0040909 x 09R1416:0025906'],1,['M'],'is 1st; forebear of 10R405:M0000715 and 10R305:W0010502; stalled; very slow, dwarf; use partial shade','K6711','16R',30,20).

packing_plan(162,1,['09R401:M0051104 x 09R1416:0025907'],1,['M'],'is 1st; alternate for 09R401:M0040909; stalled; very slow, dwarf; use partial shade','K6711','16R',30,20).

packing_plan(163,1,['09R401:M0056406 x 09R1416:0025906'],1,['M'],'is 1st; alternate for 09R401:M0040909; stalled; very slow, dwarf; use partial shade','K6711','16R',30,20).

packing_plan(164,1,['09R401:M0057004 x 09R1416:0025907'],1,['M'],'is 1st; alternate for 09R401:M0040909; stalled; very slow, dwarf; use partial shade','K6711','16R',30,20).

packing_plan(165,1,['10R405:M0000715 x 10R2254:0032002'],1,['M'],'is 2nd; forebear of 12R405:M0009302; stalled; very slow, dwarf; use partial shade','K6711','16R',30,20).

packing_plan(166,1,['12R405:M0009302 x 12R3486:0014708'],1,['M'],'is 3rd; stalled; very slow, dwarf; low cl; use partial shade','K6711','16R',30,20).


#+end_src





*** TODO lls1 5 rows

+ overplant for testing in full rows, cut out wild-types; probably packed 30/packet

+ but they are fast! so plant a row each of S, W, M in the first planting
  for these, which go in the second planting



#+begin_src prolog :tangle no


packing_plan(167,1,['13R4057:0013901 x 13R4057:0013901'],2,[check,'S'],'is 3rd; no phe 15r; pick one of three','K1702','16R',30,20).

packing_plan(168,1,['13R4057:0013903 x 13R4057:0013903'],2,[check,'S'],'is 3rd; no phe 15r; pick one of three','K1702','16R',30,20).

packing_plan(169,1,['13R4057:0013913 x 13R4057:0013913'],2,[check,'S'],'is 3rd; no phe 15r; pick one of three','K1702','16R',30,20).




packing_plan(170,1,['15R4335:0006104 x 15R4335:0006104'],1,['W'],'is 3rd selfed','K1702','16R',30,20).


packing_plan(171,1,['15R4336:0006204 x 15R4336:0006204'],1,['M'],'is 3rd selfed','K1702','16R',30,20).


#+end_src








*** TODO lls1 121D K3402 1 row



#+begin_src prolog :tangle no

packing_plan(172,1,['14R4197:0015402 x 14R4197:0015402'],2,[check,'S'],'is 2nd selfed; repeat of 15r','K3402','16R',30,20).



#+end_src




*** TODO lls1121D K5302  2 half-rows


#+begin_src prolog :tangle no

packing_plan(173,1,['15R4337:0006301 x 15R4337:0006301'],1,[check,'S'],'is 2nd selfed','K5302','16R',20,10).

packing_plan(174,1,['15R4338:0006406 x 15R4338:0006406'],1,[check,'S'],'is 2nd selfed','K5302','16R',20,10).




#+end_src







** recessives to back-cross

*** TODO les*-74-1873-9  6 half-rows

#+begin_src prolog :tangle no

packing_plan(175,1,['15R4378:0008107 x 15R4378:0008107'],1,[check,'S'],'is 3rd selfed','K9304','16R',15,10).

packing_plan(176,1,['15R4379:0008213 x 15R4379:0008213'],1,[check,'S'],'is 3rd selfed','K9304','16R',15,10).

packing_plan(177,1,['15R4347:0008301 x 15R4347:0008301'],1,[check,'W'],'is 2nd selfed','K9304','16R',15,10).

packing_plan(178,1,['15R4348:0008403 x 15R4348:0008403'],1,[check,'W'],'is 2nd selfed','K9304','16R',15,10).

packing_plan(179,1,['15R4380:0008511 x 15R4380:0008511'],1,[check,'M'],'is 2nd selfed','K9304','16R',15,10).

packing_plan(180,1,['15R4381:0008601 x 15R4381:0008601'],1,[check,'M'],'is 2nd selfed','K9304','16R',15,10).



#+end_src











*** TODO les*-N2013  7 half-rows

#+begin_src prolog :tangle no

packing_plan(181,1,['11R3237:0005707 x 11R3237:0005707'],2,[check,'S'],'is 1st selfed; not checked since 12r; something fishy','K7807','16R',15,10).

packing_plan(182,1,['11R3237:0005708 x 11R3237:0005708'],2,[check,'S'],'is 1st selfed; not checked since 12r; something fishy','K7807','16R',15,10).

packing_plan(183,1,['11R3237:0005710 x 11R3237:0005710'],2,[check,'S'],'is 1st selfed; not checked since 12r; something fishy','K7807','16R',15,10).



packing_plan(184,1,['11R3238:0005801 x 11R3238:0005801'],2,[check,'W'],'is 1st selfed; not checked since 12r; something fishy','K7807','16R',15,10).

packing_plan(185,1,['11R3238:0005803 x 11R3238:0005803'],2,[check,'W'],'is 1st selfed; not checked since 12r; something fishy','K7807','16R',15,10).

packing_plan(186,1,['11R3238:0005806 x 11R3238:0005806'],2,[check,'W'],'is 1st selfed; not checked since 12r; something fishy','K7807','16R',15,10).



packing_plan(187,1,['15R4383:0008902 x 15R4383:0008902'],2,[check,'M'],'is 2nd selfed','K7807','16R',15,10).


#+end_src






*** TODO les*-N2012  3 half-rows

#+begin_src prolog :tangle no

packing_plan(188,1,['11R3079:0005403 x 11R3079:0005403'],1,[check,'S'],'is 1st selfed; last checked in 12r','K7702','16R',15,10).


packing_plan(189,1,['15R4349:0008708 x 15R4349:0008708'],1,[check,'W','S'],'is 2nd selfed','K7702','16R',15,10).

packing_plan(190,1,['15R4382:0008814 x 15R4382:0008814'],1,[check,'M','S'],'is 2nd selfed','K7702','16R',15,10).


#+end_src







** secondary dominants

*** TODO Les*-N2397   16 half-rows

#+begin_src prolog :tangle no

packing_plan(191,1,['06R200:S00I2612 x 06R0084:0008414'],2,['S'],'is 1st; S root; pick one of fourteen; check sex organs','K8414','16R',15,10).

packing_plan(192,1,['11R205:S0049013 x 11R3277:0030610'],2,['S'],'is 1st; alternate branch; pick one of fourteen; check sex organs','K8414','16R',15,10).

packing_plan(193,1,['06N201:S0007701 x 06N1159:0019209'],2,['S'],'is 1st; alternate for 06N201:S0014305; pick one of fourteen; check sex organs','K8414','16R',15,10).

packing_plan(194,1,['06N201:S0013711 x 06N1159:0019212'],2,['S'],'is 1st; alternate for 06N201:S0014305; pick one of fourteen; check sex organs','K8414','16R',15,10).

packing_plan(195,1,['06N201:S0013804 x 06N1159:0019207'],2,['S'],'is 1st; alternate for 06N201:S0014305; pick one of fourteen; check sex organs','K8414','16R',15,10).

packing_plan(196,1,['06N201:S0013807 x 06N1159:0019206'],2,['S'],'is 1st; alternate for 06N201:S0014305; pick one of fourteen; check sex organs','K8414','16R',15,10).

packing_plan(197,1,['06N201:S0013808 x 06N1159:0019204'],2,['S'],'is 1st; alternate for 06N201:S0014305; pick one of fourteen; check sex organs','K8414','16R',15,10).

packing_plan(198,1,['06N201:S0014305 x 06N1159:0019201'],2,['S'],'is 1st; forebear of 11N205:S0031511 and 11N205:S0033012; pick one of fourteen; check sex organs','K8414','16R',15,10).

packing_plan(199,1,['11N205:S0030703 x 11N3487:0023502'],2,['S'],'is 2nd; alternate for 11N205:S0031805; alternate branch; pick one of fourteen; check sex organs','K8414','16R',15,10).

packing_plan(200,1,['11N205:S0030707 x 11N3487:0023509'],2,['S'],'is 2nd; alternate for 11N205:S0031805; alternate branch; pick one of fourteen; check sex organs','K8414','16R',15,10).

packing_plan(201,1,['11N205:S0031805 x 11N3487:0023511'],2,['S'],'is 2nd; bad tassels 14r; pick one of fourteen','K8414','16R',15,10).

packing_plan(202,1,['11N205:S0031511 x 11N3486:0023407'],2,['S'],'is 2nd; alternate branch; pick one of fourteen; check sex organs','K8414','16R',15,10).

packing_plan(203,1,['11N205:S0033012 x 11N3486:0023408'],2,['S'],'is 2nd; alternate branch; pick one of fourteen; check sex organs','K8414','16R',15,10).

packing_plan(204,1,['11N205:S0031805 x 11N3487:0023511'],2,['S'],'is 2nd; bad tassels 14r; pick one of fourteen','K8414','16R',15,10).




packing_plan(205,1,['11N405:M0037303 x 11N3489:0023703'],1,['M'],'is 4th; pick one of two; check sex organs','K8414','16R',15,10).

packing_plan(206,1,['11N405:M0037603 x 11N3489:0023703'],1,['M'],'is 4th; pick one of two; check sex organs; bad tassels 14r','K8414','16R',15,10).


#+end_src




*** TODO Les*-NA7145  8 half-rows

#+begin_src prolog :tangle no

packing_plan(207,1,['10R205:S0006107 x 10R3065:0037509'],1,['S'],'is 3rd; alternate for 10R205:S0006101; pick one of four','K9113','16R',15,10).

packing_plan(208,1,['10R205:S0006112 x 10R3065:0037509'],1,['S'],'is 3rd; alternate for 10R205:S0006101; pick one of four','K9113','16R',15,10).

packing_plan(209,1,['10R205:S0006101 x 10R3065:0037509'],1,['S'],'is 3rd; forebear of 12R205:S0011208; pick one of four','K9113','16R',15,10).

packing_plan(210,1,['12R205:S0011208 x 12R3321:0037407'],1,['S'],'is 4th; repeat of 14r; pick one of four','K9113','16R',15,10).




packing_plan(211,1,['09R401:M0056405 x 09R1135:0030501'],2,['M'],'is 1st; alternate for 09R401:M0052303; pick one of four; check sex organs','K9113','16R',15,10).

packing_plan(212,1,['09R401:M0057301 x 09R1135:0030511'],2,['M'],'is 1st; alternate for 09R401:M0052303; pick one of four; check sex organs','K9113','16R',15,10).

packing_plan(213,1,['09R401:M0052303 x 09R1135:0030502'],2,['M'],'is 1st; forebear of 12R405:M0009304; pick one of four; crummy yield; check sex organs','K9113','16R',15,10).

packing_plan(214,1,['12R405:M0009304 x 12R3323:0037602'],2,['M'],'is 3rd; repeat of 14r; pick one of four; crummy yield; check sex organs','K9113','16R',15,10).


#+end_src





*** TODO lls1-nk 7 half-rows

#+begin_rmk

<2014-06-05 Tu> :toni:
Believe dominant in our backgrounds based on pedigrees
#+end_rmk


#+begin_src prolog :tangle no

packing_plan(215,1,['12R205:S0003416 x 12R3532:0015807'],2,[check,'S'],'is 2nd; repeat; dominant, no ear in 12r; pick one of four; no ear 4.1 in 12n; no viable mutants in 12n due to trade winds','K17806','16R',15,10).

packing_plan(216,1,['12R205:S0004002 x 12R3532:0015801'],2,[check,'S'],'is 2nd; alternate for 12R205:S0003416; pick one of four','K17806','16R',15,10).

packing_plan(217,1,['12R205:S0010303 x 12R3532:0015810'],2,[check,'S'],'is 2nd; alternate for 12R205:S0003416; pick one of four','K17806','16R',15,10).

packing_plan(218,1,['12R205:S0010306 x 12R3532:0015810'],2,[check,'S'],'is 2nd; alternate for 12R205:S0003416; pick one of four','K17806','16R',15,10).




packing_plan(219,1,['14R305:W0003105 x 14R4311:0026603'],2,['W'],'is 3rd','K17806','16R',15,10).


packing_plan(220,1,['13R405:M0002610 x 13R4142:0018308'],2,['M'],'is 2nd; dominant; pick one of two','K17806','16R',15,10).

packing_plan(221,1,['13R405:M0002611 x 13R4142:0018305'],2,['M'],'is 2nd; dominant; pick one of two','K17806','16R',15,10).


#+end_src




















** bulking


*** TODO Les1

+ W23, K1903 doubles available; otherwise done

#+begin_src prolog :tangle no

packing_plan(222,1,['12N205:S0036113 x 12N3902:0006503'],2,[inc,self,'B'],'is 6th!; phenotype in 14r; repeat; seemed Les2-like to Gerry in 12r; great Les1 phenotype in 12n','K0106','16R',15,10).

packing_plan(223,1,['12N205:S0036113 x 12N3902:0006503'],2,[inc,self,'B'],'is 6th!; phenotype in 14r; repeat; seemed Les2-like to Gerry in 12r; great Les1 phenotype in 12n','K0106','16R',15,10).


packing_plan(224,1,['14R305:W0001016 x 14R4271:0019503'],2,[inc,self,'B'],'is 6th!','K0106','16R',15,10).

packing_plan(225,1,['14R305:W0001016 x 14R4271:0019503'],2,[inc,self,'B'],'is 6th!','K0106','16R',15,10).



packing_plan(226,1,['14R205:S0000212 x 14R4144:0019801'],2,[inc,self,'B'],'is 6th!','K1903','16R',15,10).

packing_plan(227,1,['14R205:S0000212 x 14R4144:0019801'],2,[inc,self,'B'],'is 6th!','K1903','16R',15,10).


packing_plan(228,1,['12R405:M0003306 x 12R3557:0018607'],2,[inc],'is 6th!; bulk if room','K1903','16R',15,10).

packing_plan(229,1,['12R405:M0003306 x 12R3557:0018607'],2,[inc],'is 6th!; bulk if room','K1903','16R',15,10).



#+end_src






 

*** TODO Les2

+ look at the LesX/Les2 doubles?  one in W, K0203:
%  packing_plan(,1,['12R305:W0000211 x 12R3566:0019512'],1,[photo],'look for doubles','K0203',15,10).

+ Mo20W, K0207 well bulked, selfed, and out-crossed.  Done for now!

+ W23, K0207 branch stalled.  Last year I started some rebuilds, this year
  carry on.

+ Mo20W, K2002 done for now!

+ W23, K2002 done for now; has double mutants



#+begin_src prolog :tangle no

packing_plan(230,1,['12N205:S0036112 x 12N3912:0008310'],2,[inc,self,'B'],'is 6th!; addtnl bulking good','K0202','16R',15,10).

packing_plan(231,1,['12N205:S0036112 x 12N3912:0008310'],2,[inc,self,'B'],'is 6th!; addtnl bulking good','K0202','16R',15,10).




packing_plan(232,1,['11N205:S0037906 x 11N3402:0008110'],2,[inc],'is 6th!; addtnl bulking good if room','K0203','16R',15,10).

packing_plan(233,1,['11N205:S0037906 x 11N3402:0008110'],2,[inc],'is 6th!; addtnl bulking good if room','K0203','16R',15,10).


packing_plan(234,1,['14R405:M0001806 x 14R4077:0007406'],2,[inc,self,'B'],'is 6th!','K0203','16R',15,10).

packing_plan(235,1,['14R405:M0001806 x 14R4077:0007406'],2,[inc,self,'B'],'is 6th!','K0203','16R',15,10).




packing_plan(236,1,['13R405:M0002504 x 13R4079:0004909'],2,[inc,self,'B'],'is 6th!; repeat','K0207','16R',15,10).

packing_plan(237,1,['13R405:M0002504 x 13R4079:0004909'],2,[inc,self,'B'],'is 6th!; repeat','K0207','16R',15,10).



packing_plan(238,1,['13R405:M0002602 x 13R4081:0005403'],2,[inc,self],'is 6th!; 14r bulks not great','K2002','16R',15,10).

packing_plan(239,1,['13R405:M0002602 x 13R4081:0005403'],2,[inc,self],'is 6th!; 14r bulks not great','K2002','16R',15,10).



#+end_src

















*** TODO Les2-N845A

#+begin_src prolog


packing_plan(240,1,['13R205:S0000507 x 13R4145:0018815'],2,[inc,self,'B'],'is 6th!','K5515','16R',15,10).

packing_plan(241,1,['13R205:S0000507 x 13R4145:0018815'],2,[inc,self,'B'],'is 6th!','K5515','16R',15,10).


packing_plan(242,1,['14R305:W0000905 x 14R4273:0020102'],2,[inc,self,'B'],'is 6th!','K5515','16R',15,10).

packing_plan(243,1,['14R305:W0000905 x 14R4273:0020102'],2,[inc,self,'B'],'is 6th!','K5515','16R',15,10).




packing_plan(244,1,['13R405:M0002101 x 13R4150:0019405'],2,[inc,self],'is 6th!; 14r self poor','K5525','16R',15,10).

packing_plan(245,1,['13R405:M0002101 x 13R4150:0019405'],2,[inc,self],'is 6th!; 14r self poor','K5525','16R',15,10).


#+end_src







*** TODO Les6


+ W23, K2202 done; double mutants available

+ W23, K2212 done


#+begin_src prolog :tangle no

packing_plan(246,1,['11N205:S0037004 x 11N3433:0012810'],2,[inc,self],'is 6th!; late ears have marginal yield in 14r; small ears, late silk in 12r; watch osc; 12n tassels not as plump and Mo20Wish as usual; in 12n, ears small, late, and silked in sheath','K0403','16R',15,10).

packing_plan(247,1,['11N205:S0037004 x 11N3433:0012810'],2,[inc,self],'is 6th!; late ears have marginal yield in 14r; small ears, late silk in 12r; watch osc; 12n tassels not as plump and Mo20Wish as usual; in 12n, ears small, late, and silked in sheath','K0403','16R',15,10).


packing_plan(248,1,['12R305:W0011316 x 12R3600:0024913'],2,[inc,self],'is 6th!; emphasize self; plant if room; watch osc','K0403','16R',15,10).

packing_plan(249,1,['12R305:W0011316 x 12R3600:0024913'],2,[inc,self],'is 6th!; emphasize self; plant if room; watch osc','K0403','16R',15,10).


packing_plan(250,1,['13R4087:0006905 x 13R4087:0006903'],2,[inc],'is 6th!; watch osc and evaluate for sickness; poor yield in 14r','K0403','16R',15,10).

packing_plan(251,1,['13R4087:0006905 x 13R4087:0006903'],2,[inc],'is 6th!; watch osc and evaluate for sickness; poor yield in 14r','K0403','16R',15,10).





packing_plan(252,1,['12N205:S0038208 x 12N3965:0020603'],2,[inc,self],'is 6th; no ear in 14r; no info 13r; in 12n, paternal ears absent or small; bulking optional','K2202','16R',15,10).

packing_plan(253,1,['12N205:S0038208 x 12N3965:0020603'],2,[inc,self],'is 6th; no ear in 14r; no info 13r; in 12n, paternal ears absent or small; bulking optional','K2202','16R',15,10).


packing_plan(254,1,['15R405:M0001406 x 15R4277:0011501'],2,[inc,self,'B'],'is 6th!','K2202','16R',15,10).




packing_plan(255,1,['12N205:S0041602 x 12N3970:0021101'],1,[self],'is 6th!; bulking optional','K2212','16R',15,10).





#+end_src









*** TODO Les7


#+begin_src prolog :tangle no


packing_plan(256,1,['15R305:W0000709 x 15R4360:0012605'],2,[inc,self,'B'],'is 6th!','K2312','16R',15,10).

packing_plan(257,1,['15R305:W0000709 x 15R4360:0012605'],2,[inc,self,'B'],'is 6th!','K2312','16R',15,10).


packing_plan(258,1,['14R405:M0001211 x 14R4282:0021308'],2,[inc,self,'B'],'is 6th!','K2312','16R',15,10).

packing_plan(259,1,['14R405:M0001211 x 14R4282:0021308'],2,[inc,self,'B'],'is 6th!','K2312','16R',15,10).



#+end_src


*** TODO Les9


#+begin_src prolog :tangle no
packing_plan(260,1,['11N205:S0036710 x 11N3445:0015105'],2,[inc,self],'is 6th!; selfing most important; small ears in 14r; small ears that lag tassels in 12r; slow silking and slow plant senescence in 12r','K0707','16R',15,10).

packing_plan(261,1,['11N205:S0036710 x 11N3445:0015105'],2,[inc,self],'is 6th!; selfing most important; small ears in 14r; small ears that lag tassels in 12r; slow silking and slow plant senescence in 12r','K0707','16R',15,10).



packing_plan(262,1,['14R4262:0012501 x 14R4262:0012509'],2,[inc,self,'B'],'small ear in 14r; self stalled?','K0707','16R',15,10).

packing_plan(263,1,['14R4262:0012501 x 14R4262:0012509'],2,[inc,self,'B'],'small ear in 14r; self stalled?','K0707','16R',15,10).


packing_plan(264,1,['12N405:M0035703 x 12N3993:0024910'],2,[inc,self],'is 6th!; bulking imperative; low cl; 13r self yield poor; 14r self yield adequate','K0707','16R',15,10).

packing_plan(265,1,['12N405:M0035703 x 12N3993:0024910'],2,[inc,self],'is 6th!; bulking imperative; low cl; 13r self yield poor; 14r self yield adequate','K0707','16R',15,10).



packing_plan(266,1,['12R305:W0002901 x 12R3620:0027307'],2,[inc,self],'is 6th!','K2506','16R',15,10).

packing_plan(267,1,['12R305:W0002901 x 12R3620:0027307'],2,[inc,self],'is 6th!','K2506','16R',15,10).


#+end_src























*** TODO Les10
#+begin_src prolog :tangle no

packing_plan(268,1,['14R205:S0000508 x 14R4287:0022003'],1,[inc,self,'B','M'],'is 6th!','K0801','16R',15,10).

packing_plan(269,1,['14R205:S0000508 x 14R4287:0022003'],1,[inc,self,'B','M'],'is 6th!','K0801','16R',15,10).


packing_plan(270,1,['13R305:W0000706 x 13R3623:0024902'],1,[inc,self],'is 6th!; no ears in 14r','K0801','16R',15,10).

packing_plan(271,1,['13R305:W0000706 x 13R3623:0024902'],1,[inc,self],'is 6th!; no ears in 14r','K0801','16R',15,10).



packing_plan(272,1,['12R305:W0002609 x 12R3625:0027904'],1,[inc,self,'S'],'is 6th!; no ears in 12r; poor ears in 14r; rebuild S','K2606','16R',15,10).

packing_plan(273,1,['12R305:W0002609 x 12R3625:0027904'],1,[inc,self,'S'],'is 6th!; no ears in 12r; poor ears in 14r; rebuild S','K2606','16R',15,10).


#+end_src



#+begin_src prolog :tangle no


#+end_src








*** TODO Les11

#+begin_src prolog :tangle no
packing_plan(274,1,['14R205:S0000415 x 14R4291:0022711'],2,[inc,self,'B'],'is 6th!; forebear male had anthocyanin around lesns in 12n; phenotype may be fast','K0901','16R',15,10).

packing_plan(275,1,['14R205:S0000415 x 14R4291:0022711'],2,[inc,self,'B'],'is 6th!; forebear male had anthocyanin around lesns in 12n; phenotype may be fast','K0901','16R',15,10).


packing_plan(276,1,['12R305:W0002602 x 12R3627:0028208'],2,[inc],'is 6th!; lesions along and between veins, less frequent initiation frequency than in Mo20W, more uniform in size, with clear senescent center, then brown necrotic ring, then squarish chlorotic patch in 12n','K0901','16R',15,10).

packing_plan(277,1,['12R305:W0002602 x 12R3627:0028208'],2,[inc],'is 6th!; lesions along and between veins, less frequent initiation frequency than in Mo20W, more uniform in size, with clear senescent center, then brown necrotic ring, then squarish chlorotic patch in 12n','K0901','16R',15,10).




#+end_src
























*** TODO Les12

#+begin_src prolog :tangle no

packing_plan(278,1,['12N305:W0038909 x 12N4008:0027205'],1,[self],'is 6th!; ears poor in 14r; check osc; watch for metabolic effects','K1001','16R',15,10).


packing_plan(279,1,['14R4264:0013207 x 14R4264:0013209'],2,[inc,self],'is M 6th bulked; check osc; poor ears and tassels in 14r','K1001','16R',15,10).

packing_plan(280,1,['14R4264:0013207 x 14R4264:0013209'],2,[inc,self],'is M 6th bulked; check osc; poor ears and tassels in 14r','K1001','16R',15,10).



packing_plan(281,1,['12R305:W0011317 x 12R3632:0028810'],2,[inc,self],'is 6th!; low cl; ears?','K2711','16R',15,10).

packing_plan(282,1,['12R305:W0011317 x 12R3632:0028810'],2,[inc,self],'is 6th!; low cl; ears?','K2711','16R',15,10).

packing_plan(283,1,['14R4012:0013304 x 14R4012:0013317'],2,[inc,self],'is W 6th bulked; male parent had no ear in 14r','K2711','16R',15,10).

packing_plan(284,1,['14R4012:0013304 x 14R4012:0013317'],2,[inc,self],'is W 6th bulked; male parent had no ear in 14r','K2711','16R',15,10).



packing_plan(285,1,['14R4013:0013414 x 14R4013:0013402'],2,[inc,self],'is M 6th bulked; male parent had small ear in 14r','K2711','16R',15,10).

packing_plan(286,1,['14R4013:0013414 x 14R4013:0013402'],2,[inc,self],'is M 6th bulked; male parent had small ear in 14r','K2711','16R',15,10).


#+end_src










	     



*** TODO Les13

#+begin_src prolog

packing_plan(287,1,['12N205:S0041303 x 12N4017:0028305'],2,[inc,self,'B'],'is 6th!; low cl; bulking imperative; male parent had ear small in 12r','K1109','16R',15,10).

packing_plan(288,1,['12N205:S0041303 x 12N4017:0028305'],2,[inc,self,'B'],'is 6th!; low cl; bulking imperative; male parent had ear small in 12r','K1109','16R',15,10).




packing_plan(289,1,['13R205:S0003402 x 13R4167:0026602'],2,[inc,self,'B','M'],'is 6th!; bulking imperative; repeat','K2805','16R',15,10).

packing_plan(290,1,['13R205:S0003402 x 13R4167:0026602'],2,[inc,self,'B','M'],'is 6th!; bulking imperative; repeat','K2805','16R',15,10).



packing_plan(291,1,['12N305:W0039204 x 12N4020:0028912'],2,[inc,self],'is 6th!; repeat of 13r; small ear 14r; bulking important','K2805','16R',15,10).

packing_plan(292,1,['12N305:W0039204 x 12N4020:0028912'],2,[inc,self],'is 6th!; repeat of 13r; small ear 14r; bulking important','K2805','16R',15,10).


#+end_src












	     	




	     

	     









*** TODO Les17

+ Mo20W, K1309 consistently has no ears; so done

+ W23, K1309 has variable ears, but have a self; done

+ Mo20W, K3007 has variable to no ears; done

+ W23, K3007 doubles available; otherwise done



#+begin_src prolog :tangle no

packing_plan(293,1,['14R405:M0001808 x 14R4296:0024014'],2,[inc,self,'B'],'is 6th!','K1309','16R',15,10).

packing_plan(294,1,['14R405:M0001808 x 14R4296:0024014'],2,[inc,self,'B'],'is 6th!','K1309','16R',15,10).


#+end_src















*** TODO Les18


#+begin_src prolog :tangle no

packing_plan(295,1,['12N205:S0038205 x 12N4028:0030308'],1,['B'],'is 6th!; just need the B, so here','K1411','16R',15,10).

packing_plan(296,1,['14R305:W0001006 x 14R4299:0024502'],2,[inc,self,'B'],'is 6th!; male parent relatively healthy, small ear in 14r','K1411','16R',15,10).

packing_plan(297,1,['14R305:W0001006 x 14R4299:0024502'],2,[inc,self,'B'],'is 6th!; male parent relatively healthy, small ear in 14r','K1411','16R',15,10).




packing_plan(298,1,['11N305:W0031405 x 11N3464:0019405'],2,[inc],'is 6th!; bulking important','K3106','16R',15,10).

packing_plan(299,1,['11N305:W0031405 x 11N3464:0019405'],2,[inc],'is 6th!; bulking important','K3106','16R',15,10).


packing_plan(300,1,['14R205:S0000204 x 14R4301:0024705'],2,[inc,self,'B'],'is 6th!','K3106','16R',15,10).

packing_plan(301,1,['14R205:S0000204 x 14R4301:0024705'],2,[inc,self,'B'],'is 6th!','K3106','16R',15,10).


packing_plan(302,1,['14R405:M0001209 x 14R4302:0024808'],2,[inc,self,'B'],'is 6th!; male parent had bad tassel in 14r','K3106','16R',15,10).

packing_plan(303,1,['14R405:M0001209 x 14R4302:0024808'],2,[inc,self,'B'],'is 6th!; male parent had bad tassel in 14r','K3106','16R',15,10).



#+end_src










*** TODO Les19

+ W23, K1506 consistently has small ears that don't self; done

+ W23, K3206 done, including the self (done in Hawai'i)

#+begin_src prolog :tangle no

packing_plan(304,1,['14R205:S0000405 x 14R4303:0024904'],2,[inc,self,'B'],'is 6th!','K1506','16R',15,10).

packing_plan(305,1,['14R205:S0000405 x 14R4303:0024904'],2,[inc,self,'B'],'is 6th!','K1506','16R',15,10).


packing_plan(306,1,['12N405:M0039404 x 12N4037:0031509'],2,[inc,self,'B'],'is 6th!; missed in 14r; lesions may be small at first, favoring lower leaves','K1506','16R',15,10).

packing_plan(307,1,['12N405:M0039404 x 12N4037:0031509'],2,[inc,self,'B'],'is 6th!; missed in 14r; lesions may be small at first, favoring lower leaves','K1506','16R',15,10).




packing_plan(308,1,['13R205:S0003403 x 13R4176:0028502'],2,[inc,self],'is 6th!','K3206','16R',15,10).

packing_plan(309,1,['13R205:S0003403 x 13R4176:0028502'],2,[inc,self],'is 6th!','K3206','16R',15,10).


#+end_src














*** TODO Les21

+ W23, K3110 done

#+begin_src prolog :tangle no

packing_plan(310,1,['14R205:S0000208 x 14R4308:0026010'],2,[inc,self,'B'],'is 6th!','K3311','16R',15,10).

packing_plan(311,1,['14R205:S0000208 x 14R4308:0026010'],2,[inc,self,'B'],'is 6th!','K3311','16R',15,10).




#+end_src





*** TODO Les21-N1442

#+begin_src prolog :tangle no

packing_plan(312,1,['13R405:M0003608 x 13R4184:0030002'],2,[inc,self],'is 6th!','K7205','16R',15,10).

packing_plan(313,1,['13R405:M0003608 x 13R4184:0030002'],2,[inc,self],'is 6th!','K7205','16R',15,10).


#+end_src





*** TODO Les*-mi1

#+begin_src prolog :tangle no

packing_plan(314,1,['14R305:W0000714 x 14R4186:0026904'],2,[inc,self,'B'],'is 6th!','K12205','16R',15,10).

packing_plan(315,1,['14R305:W0000714 x 14R4186:0026904'],2,[inc,self,'B'],'is 6th!','K12205','16R',15,10).


packing_plan(316,1,['14R405:M0001815 x 14R4313:0027007'],2,[inc,self,'B'],'is 6th!','K12205','16R',15,10).

packing_plan(317,1,['14R405:M0001815 x 14R4313:0027007'],2,[inc,self,'B'],'is 6th!','K12205','16R',15,10).


#+end_src


*** TODO Les*-N1378 K7403

#+begin_src prolog :tangle no

packing_plan(318,1,['14R205:S0000101 x 14R4314:0027101'],2,[inc,self,'B'],'is 6th!','K7403','16R',15,10).

packing_plan(319,1,['14R205:S0000101 x 14R4314:0027101'],2,[inc,self,'B'],'is 6th!','K7403','16R',15,10).


packing_plan(320,1,['13R305:W0003502 x 13R4188:0030801'],1,[self],'is 6th!; self stalled?; check ears','K7403','16R',15,10).


packing_plan(321,1,['14R405:M0001512 x 14R4315:0027205'],2,[inc,self,'B'],'is 6th!','K7403','16R',15,10).

packing_plan(322,1,['14R405:M0001512 x 14R4315:0027205'],2,[inc,self,'B'],'is 6th!','K7403','16R',15,10).


#+end_src



*** TODO Les*-N2397

#+begin_src prolog :tangle no

packing_plan(323,1,['11N305:W0039211 x 11N3488:0023605'],2,[self,inc,'S','M'],'is 6th','K8414','16R',15,10).

packing_plan(324,1,['11N305:W0039211 x 11N3488:0023605'],2,[self,inc,'S','M'],'is 6th','K8414','16R',15,10).


#+end_src




*** TODO Les*-N2418

#+begin_src prolog :tangle no

packing_plan(325,1,['11N205:S0031513 x 11N3490:0023809'],2,[inc],'is 6th!; poor yield 14r','K8501','16R',15,10).

packing_plan(326,1,['11N205:S0031513 x 11N3490:0023809'],2,[inc],'is 6th!; poor yield 14r','K8501','16R',15,10).


packing_plan(327,1,['14R4102:0015303 x 14R4102:0015305'],1,[self],'is 6th! bulked; check sex organs','K8501','16R',15,10).


#+end_src













*** TODO Les*-NA7145

#+begin_src prolog :tangle no

packing_plan(328,1,['14R305:W0002901 x 14R4191:0027703'],2,[inc,self,'B'],'is 6th','K9113','16R',15,10).

packing_plan(329,1,['14R305:W0002901 x 14R4191:0027703'],2,[inc,self,'B'],'is 6th','K9113','16R',15,10).

#+end_src








*** TODO Les*-N2418

#+begin_src prolog :tangle no

packing_plan(330,1,['15R405:M0001414 x 15R4365:0019903'],1,[inc,self,'B'],'is 6th!','K8501','16R',15,10).

#+end_src




** miscellany

*** TODO Peter's corn

#+begin_src prolog :tangle no
packing_plan(331,1,['15R0667:0000000 x 15R0667:0000000'],2,['S','W','M'],'is 0th','K66700','16R',15,10).

packing_plan(332,1,['15R0668:0000000 x 15R0668:0000000'],2,['S','W','M'],'is 0th','K66800','16R',15,10).

packing_plan(333,1,['15R0669:0000000 x 15R0669:0000000'],2,['S','W','M'],'is 0th','K66900','16R',15,10).

packing_plan(334,1,['15R0670:0000000 x 15R0670:0000000'],2,['S','W','M'],'is 0th','K67000','16R',15,10).

packing_plan(335,1,['15R0671:0000000 x 15R0671:0000000'],2,['S','W','M'],'is 0th','K67100','16R',15,10).

		  
packing_plan(336,1,['15R0672:0000000 x 15R0672:0000000'],2,['S','W','M'],'is 0th','K67200','16R',15,10).

packing_plan(337,1,['15R0673:0000000 x 15R0673:0000000'],2,['S','W','M'],'is 0th','K67300','16R',15,10).

packing_plan(338,1,['15R0674:0000000 x 15R0674:0000000'],2,['S','W','M'],'is 0th','K67400','16R',15,10).

packing_plan(339,1,['15R0675:0000000 x 15R0675:0000000'],2,['S','W','M'],'is 0th','K67500','16R',15,10).

packing_plan(340,1,['15R0676:0000000 x 15R0676:0000000'],2,['S','W','M'],'is 0th','K67600','16R',15,10).

		  
packing_plan(341,1,['15R0677:0000000 x 15R0677:0000000'],2,['S','W','M'],'is 0th','K67700','16R',15,10).

packing_plan(342,1,['15R0678:0000000 x 15R0678:0000000'],2,['S','W','M'],'is 0th','K67800','16R',15,10).

packing_plan(343,1,['15R0679:0000000 x 15R0679:0000000'],2,['S','W','M'],'is 0th','K67900','16R',15,10).

packing_plan(344,1,['15R0680:0000000 x 15R0680:0000000'],2,['S','W','M'],'is 0th','K68000','16R',15,10).

packing_plan(345,1,['15R0681:0000000 x 15R0681:0000000'],2,['S','W','M'],'is 0th; selfed','K68100','16R',15,10).

		  									 
packing_plan(346,1,['15R0682:0000000 x 15R0682:0000000'],2,['S','W','M'],'is 0th; selfed','K68200','16R',15,10).

packing_plan(347,1,['15R0683:0000000 x 15R0683:0000000'],2,['S','W','M'],'is 0th; selfed','K68300','16R',15,10).

packing_plan(348,1,['15R0684:0000000 x 15R0684:0000000'],2,['S','W','M'],'is 0th; selfed','K68400','16R',15,10).


#+end_src






*** TODO Jimmy's Idf B Pl sib, family 193

#+begin_src prolog :tangle no

packing_plan(349,1,['14R0193:0027905 x 14R0193:0027905'],1,['out-cross to lesion mimics'],'is 0th; female','K19300','16R',15,10).


#+end_src




